{"ast":null,"code":"export const getDateList = _ref => {\n  let {\n    pageType,\n    data,\n    monday,\n    sunday,\n    lastMonday,\n    lastSunday,\n    selectedDate\n  } = _ref;\n\n  if (pageType === \"Week\") {\n    const thisList = data.filter(item => {\n      const date = new Date(item.date).getTime();\n      return date >= monday && date <= sunday;\n    });\n    const lastList = data.filter(item => {\n      const date = new Date(item.date).getTime();\n      return date >= lastMonday && date <= lastSunday;\n    });\n    return {\n      thisList,\n      lastList\n    };\n  } else if (pageType === \"Month\") {\n    const thisList = data.filter(item => {\n      return item.date.includes(`${selectedDate.current.year}.${selectedDate.current.month}`);\n    });\n    const lastList = data.filter(item => {\n      return item.date.includes(`${selectedDate.current.year}.${Number(selectedDate.current.month) - 1}`);\n    });\n    return {\n      thisList,\n      lastList\n    };\n  } else {\n    const thisList = data.filter(item => {\n      return item.date.includes(`${selectedDate.current.year}`);\n    });\n    const lastList = data.filter(item => {\n      return item.date.includes(`${Number(selectedDate.current.year) - 1}`);\n    });\n    return {\n      thisList,\n      lastList\n    };\n  }\n};","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/utils/getDateList.ts"],"names":["getDateList","pageType","data","monday","sunday","lastMonday","lastSunday","selectedDate","thisList","filter","item","date","Date","getTime","lastList","includes","current","year","month","Number"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAG,QAQhB;AAAA,MARiB;AAC1BC,IAAAA,QAD0B;AAE1BC,IAAAA,IAF0B;AAG1BC,IAAAA,MAH0B;AAI1BC,IAAAA,MAJ0B;AAK1BC,IAAAA,UAL0B;AAM1BC,IAAAA,UAN0B;AAO1BC,IAAAA;AAP0B,GAQjB;;AACT,MAAIN,QAAQ,KAAK,MAAjB,EAAyB;AACvB,UAAMO,QAAQ,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACC,IAAd,EAAoBE,OAApB,EAAb;AACA,aAAOF,IAAI,IAAIR,MAAR,IAAkBQ,IAAI,IAAIP,MAAjC;AACD,KAHgB,CAAjB;AAKA,UAAMU,QAAQ,GAAGZ,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACC,IAAd,EAAoBE,OAApB,EAAb;AACA,aAAOF,IAAI,IAAIN,UAAR,IAAsBM,IAAI,IAAIL,UAArC;AACD,KAHgB,CAAjB;AAKA,WAAO;AAAEE,MAAAA,QAAF;AAAYM,MAAAA;AAAZ,KAAP;AACD,GAZD,MAYO,IAAIb,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,UAAMO,QAAQ,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,aAAOA,IAAI,CAACC,IAAL,CAAUI,QAAV,CACJ,GAAER,YAAY,CAACS,OAAb,CAAqBC,IAAK,IAAGV,YAAY,CAACS,OAAb,CAAqBE,KAAM,EADtD,CAAP;AAGD,KAJgB,CAAjB;AAMA,UAAMJ,QAAQ,GAAGZ,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,aAAOA,IAAI,CAACC,IAAL,CAAUI,QAAV,CACJ,GAAER,YAAY,CAACS,OAAb,CAAqBC,IAAK,IAAGE,MAAM,CAACZ,YAAY,CAACS,OAAb,CAAqBE,KAAtB,CAAN,GAAqC,CAAE,EADlE,CAAP;AAGD,KAJgB,CAAjB;AAMA,WAAO;AAAEV,MAAAA,QAAF;AAAYM,MAAAA;AAAZ,KAAP;AACD,GAdM,MAcA;AACL,UAAMN,QAAQ,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,aAAOA,IAAI,CAACC,IAAL,CAAUI,QAAV,CAAoB,GAAER,YAAY,CAACS,OAAb,CAAqBC,IAAK,EAAhD,CAAP;AACD,KAFgB,CAAjB;AAIA,UAAMH,QAAQ,GAAGZ,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AAC9C,aAAOA,IAAI,CAACC,IAAL,CAAUI,QAAV,CAAoB,GAAEI,MAAM,CAACZ,YAAY,CAACS,OAAb,CAAqBC,IAAtB,CAAN,GAAoC,CAAE,EAA5D,CAAP;AACD,KAFgB,CAAjB;AAIA,WAAO;AAAET,MAAAA,QAAF;AAAYM,MAAAA;AAAZ,KAAP;AACD;AACF,CA9CM","sourcesContent":["import { OneDate } from \"../type\";\n\nexport const getDateList = ({\n  pageType,\n  data,\n  monday,\n  sunday,\n  lastMonday,\n  lastSunday,\n  selectedDate,\n}: any) => {\n  if (pageType === \"Week\") {\n    const thisList = data.filter((item: OneDate) => {\n      const date = new Date(item.date).getTime();\n      return date >= monday && date <= sunday;\n    });\n\n    const lastList = data.filter((item: OneDate) => {\n      const date = new Date(item.date).getTime();\n      return date >= lastMonday && date <= lastSunday;\n    });\n\n    return { thisList, lastList };\n  } else if (pageType === \"Month\") {\n    const thisList = data.filter((item: OneDate) => {\n      return item.date.includes(\n        `${selectedDate.current.year}.${selectedDate.current.month}`\n      );\n    });\n\n    const lastList = data.filter((item: OneDate) => {\n      return item.date.includes(\n        `${selectedDate.current.year}.${Number(selectedDate.current.month) - 1}`\n      );\n    });\n\n    return { thisList, lastList };\n  } else {\n    const thisList = data.filter((item: OneDate) => {\n      return item.date.includes(`${selectedDate.current.year}`);\n    });\n\n    const lastList = data.filter((item: OneDate) => {\n      return item.date.includes(`${Number(selectedDate.current.year) - 1}`);\n    });\n\n    return { thisList, lastList };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}