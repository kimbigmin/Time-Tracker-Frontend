{"ast":null,"code":"export const getAverageTime = (wakeupTime, isThisWeek) => {\n  const today = new Date().getDay();\n  const day = today === 0 || !isThisWeek ? 7 : today - 1;\n  return `${Math.floor(wakeupTime / day / 60)}시 ${wakeupTime % 60}분`;\n};","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/utils/getAverageTime.ts"],"names":["getAverageTime","wakeupTime","isThisWeek","today","Date","getDay","day","Math","floor"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,UAAD,EAAkBC,UAAlB,KAA0C;AACtE,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAd;AACA,QAAMC,GAAG,GAAGH,KAAK,KAAK,CAAV,IAAe,CAACD,UAAhB,GAA6B,CAA7B,GAAiCC,KAAK,GAAG,CAArD;AAEA,SAAQ,GAAEI,IAAI,CAACC,KAAL,CAAWP,UAAU,GAAGK,GAAb,GAAmB,EAA9B,CAAkC,KAAIL,UAAU,GAAG,EAAG,GAAhE;AACD,CALM","sourcesContent":["export const getAverageTime = (wakeupTime: any, isThisWeek: boolean) => {\n  const today = new Date().getDay();\n  const day = today === 0 || !isThisWeek ? 7 : today - 1;\n\n  return `${Math.floor(wakeupTime / day / 60)}시 ${wakeupTime % 60}분`;\n};\n"]},"metadata":{},"sourceType":"module"}