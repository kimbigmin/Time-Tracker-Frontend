{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/Analysis.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getMainTimesPercent, getDetailTimesPercent } from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\nimport { Box, Time, Percent, TimeDiff, Container, BoxContainer, ChartBox, TopBox } from \"./style\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Analysis() {\n  _s();\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n  const [data, setData] = useState([]);\n  const {\n    state\n  } = useLocation();\n  const pageType = useRef(state.type);\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const today = new Date().getDate(); // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const [weekRange, setWeekRange] = useState(-1);\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`\n  });\n  const [inputDate, setInputDate] = useState(`${selectedDate.current.year}.${selectedDate.current.month}.${today}`);\n  const standardTime = new Date(inputDate).toDateString();\n  const monday = getLastMondays(standardTime, weekRange);\n  const lastMonday = getLastMondays(standardTime, weekRange - 1);\n  const sunday = getLastSunday(monday);\n  const lastSunday = getLastSunday(lastMonday);\n\n  const getMonthList = function () {\n    let beforeMonth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return data.filter(item => {\n      return item.date.includes(`${selectedDate.current.year}.${Number(selectedDate.current.month) - beforeMonth}`);\n    });\n  }; // 데이터에서 날짜리스트 뽑아오기\n\n\n  const getDateList = (pageType, data) => {\n    if (pageType === \"Week\") {\n      const thisList = data.filter(item => {\n        const date = new Date(item.date).getTime();\n        return date >= monday && date <= sunday;\n      });\n      const lastList = data.filter(item => {\n        const date = new Date(item.date).getTime();\n        return date >= lastMonday && date <= lastSunday;\n      });\n      return {\n        thisList,\n        lastList\n      };\n    } else if (pageType === \"Month\") {\n      const thisList = getMonthList(0);\n      const lastList = getMonthList(1);\n      const restLastMonth = {\n        twoMonthAgo: getMonthList(2),\n        threeMonthAgo: getMonthList(3),\n        fourMonthAgo: getMonthList(4),\n        fiveMonthAgo: getMonthList(5)\n      };\n      return {\n        thisList,\n        lastList,\n        restLastMonth\n      };\n    } else {\n      const thisList = data.filter(item => {\n        return item.date.includes(`${selectedDate.current.year}`);\n      });\n      const lastList = data.filter(item => {\n        return item.date.includes(`${Number(selectedDate.current.year) - 1}`);\n      });\n      return {\n        thisList,\n        lastList\n      };\n    }\n  };\n\n  const {\n    thisList,\n    lastList,\n    restLastMonth\n  } = getDateList(pageType.current[2], data);\n  console.log(restLastMonth);\n  console.log(thisList); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = getEntireTimes(thisList);\n  const lastEntireTimes = getEntireTimes(lastList); // 주간\n\n  const sumTimes = getMainSumTimes(entireTimes);\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n  const sumDetailTimes = getDetailSumTimes(thisList);\n  const lastSumDetailTimes = getDetailSumTimes(lastList);\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(sumDetailTimes, lastSumDetailTimes);\n  const isThisWeek = sunday > new Date().getTime();\n  const sleepingAverage = getSleepingAverage(sumDetailTimes, lastSumDetailTimes, isThisWeek); // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = e => {\n    switch (e.target.name) {\n      case \"year\":\n        return selectedDate.current.year = e.target.value;\n\n      case \"month\":\n        return selectedDate.current.month = e.target.value;\n    }\n  };\n\n  const searchDateHandler = () => {\n    setWeekRange(0);\n    setInputDate(`${selectedDate.current.year}.${selectedDate.current.month}.1`);\n  };\n\n  const buttonWeekHandler = e => {\n    if (e.target.textContent === \"이전\") {\n      setWeekRange(weekRange - 1);\n    } else if (e.target.textContent === \"다음\") {\n      setWeekRange(weekRange + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [pageType.current[0], \" \\uBD84\\uC11D \\uD398\\uC774\\uC9C0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"year\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          selected: true,\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"\\uB144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), pageType.current[0] !== \"연간\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"month\",\n          id: \"cars\",\n          onChange: selectHandler,\n          children: month.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: el,\n              selected: thisMonth === el,\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"month\",\n          children: \"\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchDateHandler,\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), pageType.current[0] === \"주간\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${new Date(monday).getFullYear()}.${new Date(monday).getMonth() + 1}.${new Date(monday).getDate()} (월) ~ ${new Date(sunday).getFullYear()}.${new Date(sunday).getMonth() + 1}.${new Date(sunday).getDate()} (일)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: buttonWeekHandler,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: buttonWeekHandler,\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BoxContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uC774\\uBC88\", pageType.current[1], \" \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumImprove)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.improvePercent,\n              children: [mainTimesPercent.improvePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumPrivate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.privatePercent,\n              children: [mainTimesPercent.privatePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumWorks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.worksPercent,\n              children: [mainTimesPercent.worksPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumSleep)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.sleepPercent,\n              children: [mainTimesPercent.sleepPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumStudy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.studyPercent,\n              children: [detailTimesPercent.studyPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumGame)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.gamePercent,\n              children: [detailTimesPercent.gamePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumReading)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.readingPercent,\n              children: [detailTimesPercent.readingPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uAE30\\uC0C1\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisWakeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.wakePercent,\n              children: [detailTimesPercent.wakePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uCDE8\\uCE68\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisNight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.nightPercent,\n              children: [detailTimesPercent.nightPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartBox, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          thisList: thisList,\n          lastList: lastList,\n          restList: restLastMonth,\n          pageType: pageType.current,\n          selectedDate: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Analysis, \"qfOpWglo5O0KMePm37tkpIAmNXk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/Analysis.tsx"],"names":["React","useEffect","useState","useRef","useLocation","Header","Chart","getData","getLastMondays","getMainSumTimes","getDetailSumTimes","convertMinToTime","getLastSunday","getMainTimesPercent","getDetailTimesPercent","getSleepingAverage","Box","Time","Percent","TimeDiff","Container","BoxContainer","ChartBox","TopBox","getEntireTimes","Analysis","setData","data","state","pageType","type","thisMonth","Date","getMonth","thisYear","getFullYear","today","getDate","weekRange","setWeekRange","selectedDate","year","month","inputDate","setInputDate","current","standardTime","toDateString","monday","lastMonday","sunday","lastSunday","getMonthList","beforeMonth","filter","item","date","includes","Number","getDateList","thisList","getTime","lastList","restLastMonth","twoMonthAgo","threeMonthAgo","fourMonthAgo","fiveMonthAgo","console","log","entireTimes","lastEntireTimes","sumTimes","lastSumTimes","sumDetailTimes","lastSumDetailTimes","mainTimesPercent","detailTimesPercent","isThisWeek","sleepingAverage","selectHandler","e","target","name","value","searchDateHandler","buttonWeekHandler","textContent","map","el","sumImprove","improvePercent","sumPrivate","privatePercent","sumWorks","worksPercent","sumSleep","sleepPercent","sumStudy","studyPercent","sumGame","gamePercent","sumReading","readingPercent","thisWakeUp","wakePercent","thisNight","nightPercent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport {\n  getMainTimesPercent,\n  getDetailTimesPercent,\n} from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\nimport { OneDate } from \"../../type\";\nimport {\n  Box,\n  Time,\n  Percent,\n  TimeDiff,\n  Container,\n  BoxContainer,\n  ChartBox,\n  TopBox,\n} from \"./style\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\n\nfunction Analysis() {\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  const [data, setData] = useState([]);\n  const { state }: any = useLocation();\n  const pageType = useRef(state.type);\n\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const today = new Date().getDate();\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const [weekRange, setWeekRange] = useState(-1);\n\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`,\n  });\n\n  const [inputDate, setInputDate] = useState(\n    `${selectedDate.current.year}.${selectedDate.current.month}.${today}`\n  );\n\n  const standardTime = new Date(inputDate).toDateString();\n  const monday = getLastMondays(standardTime, weekRange);\n  const lastMonday = getLastMondays(standardTime, weekRange - 1);\n  const sunday = getLastSunday(monday);\n  const lastSunday = getLastSunday(lastMonday);\n\n  const getMonthList = (beforeMonth: number = 0): any => {\n    return data.filter((item: OneDate) => {\n      return item.date.includes(\n        `${selectedDate.current.year}.${\n          Number(selectedDate.current.month) - beforeMonth\n        }`\n      );\n    });\n  };\n\n  // 데이터에서 날짜리스트 뽑아오기\n  const getDateList = (pageType: any, data: any) => {\n    if (pageType === \"Week\") {\n      const thisList = data.filter((item: OneDate) => {\n        const date = new Date(item.date).getTime();\n        return date >= monday && date <= sunday;\n      });\n\n      const lastList = data.filter((item: OneDate) => {\n        const date = new Date(item.date).getTime();\n        return date >= lastMonday && date <= lastSunday;\n      });\n\n      return { thisList, lastList };\n    } else if (pageType === \"Month\") {\n      const thisList = getMonthList(0);\n\n      const lastList = getMonthList(1);\n\n      const restLastMonth = {\n        twoMonthAgo: getMonthList(2),\n        threeMonthAgo: getMonthList(3),\n        fourMonthAgo: getMonthList(4),\n        fiveMonthAgo: getMonthList(5),\n      };\n\n      return { thisList, lastList, restLastMonth };\n    } else {\n      const thisList = data.filter((item: OneDate) => {\n        return item.date.includes(`${selectedDate.current.year}`);\n      });\n\n      const lastList = data.filter((item: OneDate) => {\n        return item.date.includes(`${Number(selectedDate.current.year) - 1}`);\n      });\n\n      return { thisList, lastList };\n    }\n  };\n\n  const { thisList, lastList, restLastMonth } = getDateList(\n    pageType.current[2],\n    data\n  );\n  console.log(restLastMonth);\n  console.log(thisList);\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = getEntireTimes(thisList);\n  const lastEntireTimes = getEntireTimes(lastList);\n\n  // 주간\n  const sumTimes = getMainSumTimes(entireTimes);\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n  const sumDetailTimes = getDetailSumTimes(thisList);\n  const lastSumDetailTimes = getDetailSumTimes(lastList);\n\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(\n    sumDetailTimes,\n    lastSumDetailTimes\n  );\n  const isThisWeek = sunday > new Date().getTime();\n\n  const sleepingAverage = getSleepingAverage(\n    sumDetailTimes,\n    lastSumDetailTimes,\n    isThisWeek\n  );\n  // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = (e: any) => {\n    switch (e.target.name) {\n      case \"year\":\n        return (selectedDate.current.year = e.target.value);\n      case \"month\":\n        return (selectedDate.current.month = e.target.value);\n    }\n  };\n\n  const searchDateHandler = () => {\n    setWeekRange(0);\n    setInputDate(\n      `${selectedDate.current.year}.${selectedDate.current.month}.1`\n    );\n  };\n\n  const buttonWeekHandler = (e: any) => {\n    if (e.target.textContent === \"이전\") {\n      setWeekRange(weekRange - 1);\n    } else if (e.target.textContent === \"다음\") {\n      setWeekRange(weekRange + 1);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <TopBox>\n        <h2 className=\"title\">{pageType.current[0]} 분석 페이지</h2>\n\n        <select name=\"year\" id=\"cars\" onChange={selectHandler}>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\" selected>\n            2022\n          </option>\n        </select>\n        <label htmlFor=\"year\">년</label>\n        {pageType.current[0] !== \"연간\" && (\n          <>\n            <select name=\"month\" id=\"cars\" onChange={selectHandler}>\n              {month.map((el) => {\n                return (\n                  <option value={el} selected={thisMonth === el}>\n                    {el}\n                  </option>\n                );\n              })}\n            </select>\n            <label htmlFor=\"month\">월</label>\n          </>\n        )}\n        <button onClick={searchDateHandler}>조회</button>\n\n        {pageType.current[0] === \"주간\" && (\n          <div>\n            <p>{`${new Date(monday).getFullYear()}.${\n              new Date(monday).getMonth() + 1\n            }.${new Date(monday).getDate()} (월) ~ ${new Date(\n              sunday\n            ).getFullYear()}.${new Date(sunday).getMonth() + 1}.${new Date(\n              sunday\n            ).getDate()} (일)`}</p>\n            <button onClick={buttonWeekHandler}>이전</button>\n            <button onClick={buttonWeekHandler}>다음</button>\n          </div>\n        )}\n      </TopBox>\n\n      <Container>\n        <BoxContainer>\n          <Box>\n            <h2>이번{pageType.current[1]} 시간사용 통계</h2>\n            <h3>\n              자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n              <Percent data={mainTimesPercent.improvePercent}>\n                {mainTimesPercent.improvePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n              <Percent data={mainTimesPercent.privatePercent}>\n                {mainTimesPercent.privatePercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n              <Percent data={mainTimesPercent.worksPercent}>\n                {mainTimesPercent.worksPercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n              <Percent data={mainTimesPercent.sleepPercent}>\n                {mainTimesPercent.sleepPercent}%\n              </Percent>\n            </h3>\n          </Box>\n          <Box>\n            <h2>기타 시간사용 통계</h2>\n            <h3>\n              공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n              <Percent data={detailTimesPercent.studyPercent}>\n                {detailTimesPercent.studyPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n              <Percent data={detailTimesPercent.gamePercent}>\n                {detailTimesPercent.gamePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              독서 및 신문:{\" \"}\n              <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n              <Percent data={detailTimesPercent.readingPercent}>\n                {detailTimesPercent.readingPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              평균 기상시간: <Time>{sleepingAverage.thisWakeUp}</Time>\n              <TimeDiff data={detailTimesPercent.wakePercent}>\n                {detailTimesPercent.wakePercent}%\n              </TimeDiff>\n            </h3>\n            <h3>\n              평균 취침시간: <Time>{sleepingAverage.thisNight}</Time>\n              <TimeDiff data={detailTimesPercent.nightPercent}>\n                {detailTimesPercent.nightPercent}%\n              </TimeDiff>\n            </h3>\n          </Box>\n        </BoxContainer>\n        <ChartBox>\n          <Chart\n            thisList={thisList}\n            lastList={lastList}\n            restList={restLastMonth}\n            pageType={pageType.current}\n            selectedDate={selectedDate}\n          ></Chart>\n        </ChartBox>\n      </Container>\n    </>\n  );\n}\n\nexport default Analysis;\n"]},"metadata":{},"sourceType":"module"}