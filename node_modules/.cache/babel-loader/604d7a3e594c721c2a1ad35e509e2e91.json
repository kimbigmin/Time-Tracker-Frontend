{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    thisList,\n    lastList,\n    pageType,\n    restList = \"undefined\",\n    selectedDate\n  } = _ref;\n  const year = Number(selectedDate.current.year);\n  const month = Number(selectedDate.current.month);\n  const {\n    twoMonthAgo,\n    threeMonthAgo,\n    fourMonthAgo,\n    fiveMonthAgo\n  } = restList;\n  const monthList = pageType[2] !== \"Month\" ? [] : [{\n    beforeMonth: 5,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(fiveMonthAgo)),\n      ...getDetailSumTimes(fiveMonthAgo)\n    }\n  }, {\n    beforeMonth: 4,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(fourMonthAgo)),\n      ...getDetailSumTimes(fourMonthAgo)\n    }\n  }, {\n    beforeMonth: 3,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(threeMonthAgo)),\n      ...getDetailSumTimes(threeMonthAgo)\n    }\n  }, {\n    beforeMonth: 2,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(twoMonthAgo)),\n      ...getDetailSumTimes(twoMonthAgo)\n    }\n  }, {\n    beforeMonth: 1,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(lastList)),\n      ...getDetailSumTimes(lastList)\n    }\n  }, {\n    beforeMonth: 0,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(thisList)),\n      ...getDetailSumTimes(thisList)\n    }\n  }];\n  console.log(monthList);\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\"\n  });\n\n  const getChartData = dayData => {\n    const improveArr = dayData.entireTime.entireImprove.split(\":\");\n    const privateArr = dayData.entireTime.entirePrivate.split(\":\");\n    const sleepArr = dayData.entireTime.entireSleep.split(\":\");\n\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(improveArr[0]) + Number(improveArr[1] * 0.016);\n\n      case \"PRIVATE_TIME\":\n        return Number(privateArr[0]) + Number(privateArr[1] * 0.016);\n\n      case \"SLEEP_TIME\":\n        return Number(dayData.entireTime.entireSleep.split(\":\")[0]) + Number(dayData.entireTime.entireSleep.split(\":\")[1] * 0.016);\n\n      case \"WORK_TIME\":\n        return Number(dayData.entireTime.entireWorks.split(\":\")[0]) + Number(dayData.entireTime.entireWorks.split(\":\")[1] * 0.016);\n\n      case \"STUDY_TIME\":\n        return Number(dayData.improve.study.split(\":\")[0]) + Number(dayData.improve.study.split(\":\")[1] * 0.016);\n\n      case \"READING_TIME\":\n        return Number(dayData.improve.reading.split(\":\")[0]) + Number(dayData.improve.reading.split(\":\")[1] * 0.0166666);\n    }\n  };\n\n  const getMonthChartData = monthData => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumImprove).split(\"시간\")[0]);\n\n      case \"PRIVATE_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumPrivate).split(\"시간\")[0]);\n\n      case \"SLEEP_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumSleep).split(\"시간\")[0]);\n\n      case \"WORK_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumWorks).split(\"시간\")[0]);\n\n      case \"STUDY_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumStudy).split(\"시간\")[0]);\n\n      case \"READING_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumReading).split(\"시간\")[0]);\n    }\n  };\n\n  const weekDataSets = [{\n    label: `지난${pageType[1]}`,\n    data: lastList.map(day => {\n      console.log(day.entireTime.entireImprove);\n      return getChartData(day);\n    }),\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n  }, {\n    label: `이번${pageType[1]}`,\n    data: thisList.map(day => {\n      console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n      return getChartData(day);\n    }),\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n  }];\n  const monthDataSets = [{\n    label: `${selectedList.title}`,\n    data: monthList.map(month => {\n      return getMonthChartData(month);\n    }),\n    backgroundColor: () => {\n      switch (selectedList.list) {\n        case \"IMPROVE_TIME\":\n          return \"rgba(251, 235, 1, 0.5)\";\n\n        case \"PRIVATE_TIME\":\n          return \"rgba(241, 66, 43, 0.5)\";\n\n        case \"SLEEP_TIME\":\n          return \"rgba(107, 29, 195, 0.5)\";\n\n        case \"WORK_TIME\":\n          return \" rgba(0, 226, 207, 0.5)\";\n\n        case \"STUDY_TIME\":\n          return \"rgba(228, 130, 2, 0.5)\";\n\n        case \"READING_TIME\":\n          return \"rgba(49, 37, 2, 0.5)\";\n      }\n    }\n  }];\n  const monthLabels = Array(6).fill(\"\").map((_, idx) => {\n    const returnMonth = month - idx;\n\n    switch (returnMonth) {\n      case 0:\n        return \"12월\";\n\n      case -1:\n        return \"11월\";\n\n      case -2:\n        return \"10월\";\n\n      case -3:\n        return \"9월\";\n\n      case -4:\n        return \"8월\";\n\n      default:\n        return `${returnMonth}월`;\n    }\n  }).reverse();\n  const weekLabels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n  const data = {\n    labels: pageType[2] === \"Week\" ? weekLabels : pageType[2] === \"Month\" ? monthLabels : monthLabels,\n    datasets: pageType[2] === \"Week\" ? weekDataSets : pageType[2] === \"Month\" ? monthDataSets : monthDataSets\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`\n      }\n    },\n    scales: {\n      y: {\n        max: Math.max(...data.datasets[0].data) + 2,\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, ticks) {\n            return `${Math.floor(value)}시간 ${index}`;\n          }\n        }\n      }\n    }\n  };\n\n  const listClickHandler = e => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel = e.target.dataset.labels;\n      setSelectedList({ ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onClick: listClickHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"IMPROVE_TIME\",\n        children: \"\\uC790\\uAE30\\uACC4\\uBC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"PRIVATE_TIME\",\n        children: \"\\uAC1C\\uC778\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"WORK_TIME\",\n        children: \"\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"SLEEP_TIME\",\n        children: \"\\uCDE8\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"STUDY_TIME\",\n        children: \"\\uACF5\\uBD80\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"READING_TIME\",\n        children: \"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chart, \"dxMtVZOfa4sSSJzOmUraeqj+7sk=\");\n\n_c = Chart;\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 5rem;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n_c2 = TopBar;\nexport default Chart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"TopBar\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx"],"names":["React","useState","Bar","styled","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","getMainSumTimes","getDetailSumTimes","getEntireTimes","convertMinToTime","register","thisList","lastList","pageType","restList","selectedDate","year","Number","current","month","twoMonthAgo","threeMonthAgo","fourMonthAgo","fiveMonthAgo","monthList","beforeMonth","sumTimes","console","log","selectedList","setSelectedList","list","title","getChartData","dayData","improveArr","entireTime","entireImprove","split","privateArr","entirePrivate","sleepArr","entireSleep","entireWorks","improve","study","reading","getMonthChartData","monthData","sumImprove","sumPrivate","sumSleep","sumWorks","sumStudy","sumReading","weekDataSets","label","data","map","day","backgroundColor","monthDataSets","monthLabels","Array","fill","_","idx","returnMonth","reverse","weekLabels","labels","datasets","options","responsive","plugins","legend","position","display","text","scales","y","max","Math","ticks","callback","value","index","floor","listClickHandler","e","target","tagName","clickedLabel","dataset","textContent","TopBar","ul"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction Chart({\n  thisList,\n  lastList,\n  pageType,\n  restList = \"undefined\",\n  selectedDate,\n}: any) {\n  const year = Number(selectedDate.current.year);\n  const month = Number(selectedDate.current.month);\n\n  const { twoMonthAgo, threeMonthAgo, fourMonthAgo, fiveMonthAgo } = restList;\n\n  const monthList =\n    pageType[2] !== \"Month\"\n      ? []\n      : [\n          {\n            beforeMonth: 5,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(fiveMonthAgo)),\n              ...getDetailSumTimes(fiveMonthAgo),\n            },\n          },\n          {\n            beforeMonth: 4,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(fourMonthAgo)),\n              ...getDetailSumTimes(fourMonthAgo),\n            },\n          },\n          {\n            beforeMonth: 3,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(threeMonthAgo)),\n              ...getDetailSumTimes(threeMonthAgo),\n            },\n          },\n          {\n            beforeMonth: 2,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(twoMonthAgo)),\n              ...getDetailSumTimes(twoMonthAgo),\n            },\n          },\n          {\n            beforeMonth: 1,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(lastList)),\n              ...getDetailSumTimes(lastList),\n            },\n          },\n          {\n            beforeMonth: 0,\n            sumTimes: {\n              ...getMainSumTimes(getEntireTimes(thisList)),\n              ...getDetailSumTimes(thisList),\n            },\n          },\n        ];\n  console.log(monthList);\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\",\n  });\n\n  const getChartData = (dayData: any) => {\n    const improveArr = dayData.entireTime.entireImprove.split(\":\");\n    const privateArr = dayData.entireTime.entirePrivate.split(\":\");\n    const sleepArr = dayData.entireTime.entireSleep.split(\":\");\n\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(improveArr[0]) + Number(improveArr[1] * 0.016);\n      case \"PRIVATE_TIME\":\n        return Number(privateArr[0]) + Number(privateArr[1] * 0.016);\n\n      case \"SLEEP_TIME\":\n        return (\n          Number(dayData.entireTime.entireSleep.split(\":\")[0]) +\n          Number(dayData.entireTime.entireSleep.split(\":\")[1] * 0.016)\n        );\n      case \"WORK_TIME\":\n        return (\n          Number(dayData.entireTime.entireWorks.split(\":\")[0]) +\n          Number(dayData.entireTime.entireWorks.split(\":\")[1] * 0.016)\n        );\n      case \"STUDY_TIME\":\n        return (\n          Number(dayData.improve.study.split(\":\")[0]) +\n          Number(dayData.improve.study.split(\":\")[1] * 0.016)\n        );\n      case \"READING_TIME\":\n        return (\n          Number(dayData.improve.reading.split(\":\")[0]) +\n          Number(dayData.improve.reading.split(\":\")[1] * 0.0166666)\n        );\n    }\n  };\n\n  const getMonthChartData = (monthData: any) => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumImprove).split(\"시간\")[0]\n        );\n      case \"PRIVATE_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumPrivate).split(\"시간\")[0]\n        );\n      case \"SLEEP_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumSleep).split(\"시간\")[0]\n        );\n      case \"WORK_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumWorks).split(\"시간\")[0]\n        );\n      case \"STUDY_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumStudy).split(\"시간\")[0]\n        );\n      case \"READING_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumReading).split(\"시간\")[0]\n        );\n    }\n  };\n\n  const weekDataSets = [\n    {\n      label: `지난${pageType[1]}`,\n      data: lastList.map((day: any) => {\n        console.log(day.entireTime.entireImprove);\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: `이번${pageType[1]}`,\n      data: thisList.map((day: any) => {\n        console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ];\n\n  const monthDataSets = [\n    {\n      label: `${selectedList.title}`,\n      data: monthList.map((month) => {\n        return getMonthChartData(month);\n      }),\n      backgroundColor: () => {\n        switch (selectedList.list) {\n          case \"IMPROVE_TIME\":\n            return \"rgba(251, 235, 1, 0.5)\";\n          case \"PRIVATE_TIME\":\n            return \"rgba(241, 66, 43, 0.5)\";\n          case \"SLEEP_TIME\":\n            return \"rgba(107, 29, 195, 0.5)\";\n          case \"WORK_TIME\":\n            return \" rgba(0, 226, 207, 0.5)\";\n          case \"STUDY_TIME\":\n            return \"rgba(228, 130, 2, 0.5)\";\n          case \"READING_TIME\":\n            return \"rgba(49, 37, 2, 0.5)\";\n        }\n      },\n    },\n  ];\n\n  const monthLabels = Array(6)\n    .fill(\"\")\n    .map((_, idx) => {\n      const returnMonth = month - idx;\n      switch (returnMonth) {\n        case 0:\n          return \"12월\";\n        case -1:\n          return \"11월\";\n        case -2:\n          return \"10월\";\n        case -3:\n          return \"9월\";\n        case -4:\n          return \"8월\";\n        default:\n          return `${returnMonth}월`;\n      }\n    })\n    .reverse();\n\n  const weekLabels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\n  const data = {\n    labels:\n      pageType[2] === \"Week\"\n        ? weekLabels\n        : pageType[2] === \"Month\"\n        ? monthLabels\n        : monthLabels,\n    datasets:\n      pageType[2] === \"Week\"\n        ? weekDataSets\n        : pageType[2] === \"Month\"\n        ? monthDataSets\n        : monthDataSets,\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`,\n      },\n    },\n    scales: {\n      y: {\n        max: Math.max(...data.datasets[0].data) + 2,\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value: any, index: any, ticks: any) {\n            return `${Math.floor(value)}시간 ${index}`;\n          },\n        },\n      },\n    },\n  };\n\n  const listClickHandler = (e: any): void => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel: string = e.target.dataset.labels;\n      setSelectedList({\n        ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent,\n      });\n    }\n  };\n\n  return (\n    <>\n      <TopBar onClick={listClickHandler}>\n        <li data-labels=\"IMPROVE_TIME\">자기계발</li>\n        <li data-labels=\"PRIVATE_TIME\">개인시간</li>\n        <li data-labels=\"WORK_TIME\">일</li>\n        <li data-labels=\"SLEEP_TIME\">취침</li>\n        <li data-labels=\"STUDY_TIME\">공부시간</li>\n        <li data-labels=\"READING_TIME\">독서 및 신문</li>\n      </TopBar>\n      <Bar options={options} data={data} />\n    </>\n  );\n}\n\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 5rem;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}