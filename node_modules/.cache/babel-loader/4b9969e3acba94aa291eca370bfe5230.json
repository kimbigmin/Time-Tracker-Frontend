{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport sumHoursMinutes from \"../../utils/sumTime\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\nimport { Box, Time, Percent, TimeDiff } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnalysisWeek() {\n  _s();\n\n  const [data, setData] = useState([]); // 데이터 불러오기\n\n  useEffect(() => {\n    getData(setData);\n  }, []); // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const standard = new Date(); // 오늘 날짜\n\n  const monday = new Date(getLastMondays(standard, 1)).getTime();\n  const sunday = new Date(getLastSunday(monday)).getTime();\n  const lastMonday = new Date(getLastMondays(standard, 2)).getTime();\n  const lastSunday = new Date(getLastSunday(lastMonday)).getTime(); // 데이터에서 이번주, 저번주 리스트 뽑아오기\n\n  const weekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  }); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = weekList.map(item => item.entireTime);\n  const lastEntireTimes = lastWeekList.map(item => item.entireTime);\n\n  const getSumTime = function (entire, time) {\n    let detailTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n    if (detailTime !== \"\") {\n      return entire.reduce((acc, obj) => {\n        return acc + sumHoursMinutes(obj[time][detailTime]);\n      }, 0);\n    } else {\n      return entire.reduce((acc, obj) => {\n        return acc + sumHoursMinutes(obj[time]);\n      }, 0);\n    }\n  }; // 이번주 각 항목에 대한 시간 합계 구하기\n\n\n  const sumTimes = {\n    sumImprove: getSumTime(entireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(entireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(entireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(entireTimes, \"entireSleep\")\n  }; // 저번주 각 항목에 대한 시간 합계 구하기\n\n  const lastSumTimes = {\n    lastSumImprove: getSumTime(lastEntireTimes, \"entireImprove\"),\n    lastSumPrivate: getSumTime(lastEntireTimes, \"entirePrivate\"),\n    lastSumWorks: getSumTime(lastEntireTimes, \"entireWorks\"),\n    lastSumSleep: getSumTime(lastEntireTimes, \"entireSleep\")\n  };\n  const sumDetailTimes = {\n    sumStudy: getSumTime(weekList, \"improve\", \"study\"),\n    sumGame: getSumTime(weekList, \"private\", \"game\"),\n    sumReading: getSumTime(weekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(weekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(weekList, \"sleeping\", \"sleep\")\n  };\n  const lastSumDetailTimes = {\n    lastSumStudy: getSumTime(lastWeekList, \"improve\", \"study\"),\n    lastSumGame: getSumTime(lastWeekList, \"private\", \"game\"),\n    lastSumReading: getSumTime(lastWeekList, \"improve\", \"reading\"),\n    lastSumWakeUp: getSumTime(lastWeekList, \"sleeping\", \"wake\"),\n    lastSumNight: getSumTime(lastWeekList, \"sleeping\", \"sleep\")\n  }; // 저번주와의 퍼센트 비교값 구하기\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumImprove, lastSumImprove),\n    privatePercent: getPercentage(sumPrivate, lastSumPrivate),\n    worksPercent: getPercentage(sumWorks, lastSumWorks),\n    sleepPercent: getPercentage(sumSleep, lastSumSleep)\n  }; // 기타 시간사용 통계 퍼센트\n\n  const studyPercent = getPercentage(sumStudy, sumLastStudy);\n  const gamePercent = getPercentage(sumGame, sumLastGame);\n  const readingPercent = getPercentage(sumReading, sumLastReading);\n  const thisWakeUp = getAverageTime(sumWakeUp);\n  const lastWakeUp = getAverageTime(sumLastWakeUp);\n  const thisNight = getAverageTime(sumNight);\n  const lastNight = getAverageTime(sumLastNight);\n  const wakePercent = getPercentage(sumWakeUp, sumLastWakeUp);\n  const nightPercent = getPercentage(sumNight, sumLastNight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC774\\uBC88\\uC8FC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumTimes.sumImprove)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: improvePercent,\n          children: [improvePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumTimes.sumPrivate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: privatePercent,\n          children: [privatePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumTimes.sumWorks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: worksPercent,\n          children: [worksPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumTimes.sumSleep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: sleepPercent,\n          children: [sleepPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumDetailTimes.sumStudy)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: studyPercent,\n          children: [studyPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumDetailTimes.sumGame)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: gamePercent,\n          children: [gamePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n          children: convertMinToTime(sumDetailTimes.sumReading)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Percent, {\n          data: readingPercent,\n          children: [readingPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD3C9\\uADE0\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: thisWakeUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n          data: wakePercent,\n          children: [wakePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD3C9\\uADE0\\uAE30\\uC0C1: \", /*#__PURE__*/_jsxDEV(Time, {\n          children: thisNight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n          data: nightPercent,\n          children: [nightPercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnalysisWeek, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = AnalysisWeek;\nexport default AnalysisWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisWeek\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx"],"names":["React","useEffect","useState","Header","getData","getLastMondays","sumHoursMinutes","convertMinToTime","getLastSunday","getPercentage","getAverageTime","Box","Time","Percent","TimeDiff","AnalysisWeek","data","setData","standard","Date","monday","getTime","sunday","lastMonday","lastSunday","weekList","filter","item","date","console","log","lastWeekList","entireTimes","map","entireTime","lastEntireTimes","getSumTime","entire","time","detailTime","reduce","acc","obj","sumTimes","sumImprove","sumPrivate","sumWorks","sumSleep","lastSumTimes","lastSumImprove","lastSumPrivate","lastSumWorks","lastSumSleep","sumDetailTimes","sumStudy","sumGame","sumReading","sumWakeUp","sumNight","lastSumDetailTimes","lastSumStudy","lastSumGame","lastSumReading","lastSumWakeUp","lastSumNight","mainTimesPercent","improvePercent","privatePercent","worksPercent","sleepPercent","studyPercent","sumLastStudy","gamePercent","sumLastGame","readingPercent","sumLastReading","thisWakeUp","lastWakeUp","sumLastWakeUp","thisNight","lastNight","sumLastNight","wakePercent","nightPercent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport sumHoursMinutes from \"../../utils/sumTime\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\n\nimport { OneDate } from \"../../type\";\nimport { Box, Time, Percent, TimeDiff } from \"./style\";\n\nfunction AnalysisWeek() {\n  const [data, setData] = useState([]);\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const standard = new Date(); // 오늘 날짜\n  const monday = new Date(getLastMondays(standard, 1)).getTime();\n  const sunday = new Date(getLastSunday(monday)).getTime();\n  const lastMonday = new Date(getLastMondays(standard, 2)).getTime();\n  const lastSunday = new Date(getLastSunday(lastMonday)).getTime();\n\n  // 데이터에서 이번주, 저번주 리스트 뽑아오기\n  const weekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = weekList.map((item: OneDate) => item.entireTime);\n\n  const lastEntireTimes = lastWeekList.map((item: OneDate) => item.entireTime);\n\n  const getSumTime = (entire: any, time: string, detailTime: string = \"\") => {\n    if (detailTime !== \"\") {\n      return entire.reduce((acc: any, obj: any) => {\n        return acc + sumHoursMinutes(obj[time][detailTime]);\n      }, 0);\n    } else {\n      return entire.reduce((acc: any, obj: any) => {\n        return acc + sumHoursMinutes(obj[time]);\n      }, 0);\n    }\n  };\n  // 이번주 각 항목에 대한 시간 합계 구하기\n  const sumTimes = {\n    sumImprove: getSumTime(entireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(entireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(entireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(entireTimes, \"entireSleep\"),\n  };\n  // 저번주 각 항목에 대한 시간 합계 구하기\n  const lastSumTimes = {\n    lastSumImprove: getSumTime(lastEntireTimes, \"entireImprove\"),\n    lastSumPrivate: getSumTime(lastEntireTimes, \"entirePrivate\"),\n    lastSumWorks: getSumTime(lastEntireTimes, \"entireWorks\"),\n    lastSumSleep: getSumTime(lastEntireTimes, \"entireSleep\"),\n  };\n\n  const sumDetailTimes = {\n    sumStudy: getSumTime(weekList, \"improve\", \"study\"),\n    sumGame: getSumTime(weekList, \"private\", \"game\"),\n    sumReading: getSumTime(weekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(weekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(weekList, \"sleeping\", \"sleep\"),\n  };\n\n  const lastSumDetailTimes = {\n    lastSumStudy: getSumTime(lastWeekList, \"improve\", \"study\"),\n    lastSumGame: getSumTime(lastWeekList, \"private\", \"game\"),\n    lastSumReading: getSumTime(lastWeekList, \"improve\", \"reading\"),\n    lastSumWakeUp: getSumTime(lastWeekList, \"sleeping\", \"wake\"),\n    lastSumNight: getSumTime(lastWeekList, \"sleeping\", \"sleep\"),\n  };\n\n  // 저번주와의 퍼센트 비교값 구하기\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumImprove, lastSumImprove),\n    privatePercent: getPercentage(sumPrivate, lastSumPrivate),\n    worksPercent: getPercentage(sumWorks, lastSumWorks),\n    sleepPercent: getPercentage(sumSleep, lastSumSleep),\n  };\n\n  // 기타 시간사용 통계 퍼센트\n  const studyPercent = getPercentage(sumStudy, sumLastStudy);\n  const gamePercent = getPercentage(sumGame, sumLastGame);\n  const readingPercent = getPercentage(sumReading, sumLastReading);\n\n  const thisWakeUp = getAverageTime(sumWakeUp);\n  const lastWakeUp = getAverageTime(sumLastWakeUp);\n  const thisNight = getAverageTime(sumNight);\n  const lastNight = getAverageTime(sumLastNight);\n\n  const wakePercent = getPercentage(sumWakeUp, sumLastWakeUp);\n  const nightPercent = getPercentage(sumNight, sumLastNight);\n\n  return (\n    <>\n      <Header />\n      <Box>\n        <h2>이번주 시간사용 통계</h2>\n        <h3>\n          자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n          <Percent data={improvePercent}>{improvePercent}%</Percent>\n        </h3>\n        <h3>\n          개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n          <Percent data={privatePercent}>{privatePercent}%</Percent>\n        </h3>\n\n        <h3>\n          일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n          <Percent data={worksPercent}>{worksPercent}%</Percent>\n        </h3>\n\n        <h3>\n          취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n          <Percent data={sleepPercent}>{sleepPercent}%</Percent>\n        </h3>\n      </Box>\n      <Box>\n        <h2>기타 시간사용 통계</h2>\n        <h3>\n          공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n          <Percent data={studyPercent}>{studyPercent}%</Percent>\n        </h3>\n        <h3>\n          게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n          <Percent data={gamePercent}>{gamePercent}%</Percent>\n        </h3>\n        <h3>\n          독서 및 신문:{\" \"}\n          <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n          <Percent data={readingPercent}>{readingPercent}%</Percent>\n        </h3>\n        <h3>\n          평균취침: <Time>{thisWakeUp}</Time>\n          <TimeDiff data={wakePercent}>{wakePercent}%</TimeDiff>\n        </h3>\n        <h3>\n          평균기상: <Time>{thisNight}</Time>\n          <TimeDiff data={nightPercent}>{nightPercent}%</TimeDiff>\n        </h3>\n      </Box>\n    </>\n  );\n}\n\nexport default AnalysisWeek;\n"]},"metadata":{},"sourceType":"module"}