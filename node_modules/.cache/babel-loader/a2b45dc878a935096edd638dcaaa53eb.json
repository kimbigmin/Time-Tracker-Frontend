{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getMainTimesPercent, getDetailTimesPercent } from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\nimport { Box, Time, Percent, TimeDiff, Container, BoxContainer, ChartBox, TopBox } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnalysisWeek() {\n  _s();\n\n  const [data, setData] = useState([]); // 데이터 불러오기\n\n  useEffect(() => {\n    getData(setData);\n  }, []);\n  const analysisType = [\"WEEK\", \"MONTH\", \"YEAR\"]; // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const standard = new Date().toDateString(); // 오늘 날짜\n\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const thisWeek = new Date(getLastMondays(standard, 0));\n  console.log(thisWeek);\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`,\n    week: \"2주차\"\n  });\n  console.log(selectedDate);\n  console.log(thisMonth);\n  const thisMonthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n  const lastMonthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth - 1}`);\n  });\n  const thisYearList = data.filter(item => {\n    return item.date.includes(`${thisYear}`);\n  });\n  const lastYearList = data.filter(item => {\n    return item.date.includes(`${thisYear - 1}`);\n  });\n  console.log(thisMonthList);\n  console.log(lastMonthList);\n  console.log(thisYearList);\n  console.log(lastYearList); // 데이터에서 이번주, 저번주 리스트 뽑아오기\n\n  const weekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = weekList.map(item => item.entireTime);\n  const lastEntireTimes = lastWeekList.map(item => item.entireTime);\n  const monthEntireTimes = thisMonthList.map(item => item.entireTime);\n  const thisYearEntireTimes = thisYearList.map(item => item.entireTime); // 이번주 각 항목에 대한 시간 합계 구하기\n\n  const sumTimes = getMainSumTimes(entireTimes); // 저번주 각 항목에 대한 시간 합계 구하기\n\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes); // 저번주와의 퍼센트 비교값 구하기\n\n  const sumThisYearTimes = getMainSumTimes(thisYearEntireTimes);\n  console.log(sumThisYearTimes);\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(sumDetailTimes, lastSumDetailTimes);\n  const sleepingAverage = getSleepingAverage(sumDetailTimes, lastSumDetailTimes); // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = e => {\n    switch (e.target.name) {\n      case \"year\":\n        return selectedDate.current.year = e.target.value;\n\n      case \"month\":\n        return selectedDate.current.month = e.target.value;\n\n      case \"week\":\n        return selectedDate.current.week = e.target.value;\n    }\n  };\n\n  const [inputDate, setInputDate] = useState(selectedDate.current);\n\n  const searchDateHandler = () => {\n    setInputDate(current => {\n      return { ...current,\n        ...selectedDate.current\n      };\n    });\n    console.log(inputDate);\n  };\n\n  console.log(inputDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"주간분석\", \" \\uD398\\uC774\\uC9C0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"year\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"\\uB144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"month\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: month.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el,\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"\\uC6D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"week\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5 + 1(\\uB2E4\\uC74C\\uB2EC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"week\",\n        children: \"\\uC8FC\\uCC28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchDateHandler,\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BoxContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC774\\uBC88\\uC8FC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumImprove)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.improvePercent,\n              children: [mainTimesPercent.improvePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumPrivate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.privatePercent,\n              children: [mainTimesPercent.privatePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumWorks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.worksPercent,\n              children: [mainTimesPercent.worksPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumSleep)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.sleepPercent,\n              children: [mainTimesPercent.sleepPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumStudy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.studyPercent,\n              children: [detailTimesPercent.studyPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumGame)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.gamePercent,\n              children: [detailTimesPercent.gamePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumReading)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.readingPercent,\n              children: [detailTimesPercent.readingPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uAE30\\uC0C1\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisWakeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.wakePercent,\n              children: [detailTimesPercent.wakePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uCDE8\\uCE68\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisNight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.nightPercent,\n              children: [detailTimesPercent.nightPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartBox, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          thisWeek: weekList,\n          lastWeek: lastWeekList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnalysisWeek, \"wIJ23yH4T4jbAHuyWx6U+Uhx0ew=\");\n\n_c = AnalysisWeek;\nexport default AnalysisWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisWeek\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx"],"names":["React","useEffect","useState","useRef","Header","Chart","getData","getLastMondays","getMainSumTimes","getDetailSumTimes","convertMinToTime","getLastSunday","getMainTimesPercent","getDetailTimesPercent","getSleepingAverage","Box","Time","Percent","TimeDiff","Container","BoxContainer","ChartBox","TopBox","AnalysisWeek","data","setData","analysisType","standard","Date","toDateString","monday","sunday","lastMonday","lastSunday","thisMonth","getMonth","thisYear","getFullYear","thisWeek","console","log","selectedDate","year","month","week","thisMonthList","filter","item","date","includes","lastMonthList","thisYearList","lastYearList","weekList","getTime","lastWeekList","entireTimes","map","entireTime","lastEntireTimes","monthEntireTimes","thisYearEntireTimes","sumTimes","lastSumTimes","sumDetailTimes","lastSumDetailTimes","sumMonthTimes","sumThisYearTimes","mainTimesPercent","detailTimesPercent","sleepingAverage","selectHandler","e","target","name","current","value","inputDate","setInputDate","searchDateHandler","el","sumImprove","improvePercent","sumPrivate","privatePercent","sumWorks","worksPercent","sumSleep","sleepPercent","sumStudy","studyPercent","sumGame","gamePercent","sumReading","readingPercent","thisWakeUp","wakePercent","thisNight","nightPercent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport {\n  getMainTimesPercent,\n  getDetailTimesPercent,\n} from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\n\nimport { OneDate } from \"../../type\";\nimport {\n  Box,\n  Time,\n  Percent,\n  TimeDiff,\n  Container,\n  BoxContainer,\n  ChartBox,\n  TopBox,\n} from \"./style\";\n\nfunction AnalysisWeek() {\n  const [data, setData] = useState([]);\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  const analysisType = [\"WEEK\", \"MONTH\", \"YEAR\"];\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const standard = new Date().toDateString(); // 오늘 날짜\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const thisWeek = new Date(getLastMondays(standard, 0));\n  console.log(thisWeek);\n\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`,\n    week: \"2주차\",\n  });\n\n  console.log(selectedDate);\n\n  console.log(thisMonth);\n  const thisMonthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n\n  const lastMonthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth - 1}`);\n  });\n\n  const thisYearList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}`);\n  });\n\n  const lastYearList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear - 1}`);\n  });\n\n  console.log(thisMonthList);\n  console.log(lastMonthList);\n  console.log(thisYearList);\n  console.log(lastYearList);\n\n  // 데이터에서 이번주, 저번주 리스트 뽑아오기\n  const weekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList);\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = weekList.map((item: OneDate) => item.entireTime);\n  const lastEntireTimes = lastWeekList.map((item: OneDate) => item.entireTime);\n  const monthEntireTimes = thisMonthList.map(\n    (item: OneDate) => item.entireTime\n  );\n  const thisYearEntireTimes = thisYearList.map(\n    (item: OneDate) => item.entireTime\n  );\n\n  // 이번주 각 항목에 대한 시간 합계 구하기\n  const sumTimes = getMainSumTimes(entireTimes);\n  // 저번주 각 항목에 대한 시간 합계 구하기\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes);\n  // 저번주와의 퍼센트 비교값 구하기\n  const sumThisYearTimes = getMainSumTimes(thisYearEntireTimes);\n  console.log(sumThisYearTimes);\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(\n    sumDetailTimes,\n    lastSumDetailTimes\n  );\n\n  const sleepingAverage = getSleepingAverage(\n    sumDetailTimes,\n    lastSumDetailTimes\n  );\n  // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = (e: any) => {\n    switch (e.target.name) {\n      case \"year\":\n        return (selectedDate.current.year = e.target.value);\n      case \"month\":\n        return (selectedDate.current.month = e.target.value);\n      case \"week\":\n        return (selectedDate.current.week = e.target.value);\n    }\n  };\n\n  const [inputDate, setInputDate] = useState(selectedDate.current);\n\n  const searchDateHandler = () => {\n    setInputDate((current) => {\n      return {\n        ...current,\n        ...selectedDate.current,\n      };\n    });\n    console.log(inputDate);\n  };\n\n  console.log(inputDate);\n  return (\n    <>\n      <Header />\n      <TopBox>\n        <h2 className=\"title\">{\"주간분석\"} 페이지</h2>\n\n        <select name=\"year\" id=\"cars\" onChange={selectHandler}>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <label htmlFor=\"year\">년</label>\n        <select name=\"month\" id=\"cars\" onChange={selectHandler}>\n          {month.map((el) => {\n            return <option value={el}>{el}</option>;\n          })}\n        </select>\n        <label htmlFor=\"month\">월</label>\n        <select name=\"week\" id=\"cars\" onChange={selectHandler}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5 + 1(다음달)</option>\n        </select>\n        <label htmlFor=\"week\">주차</label>\n        <button onClick={searchDateHandler}>조회</button>\n      </TopBox>\n\n      <Container>\n        <BoxContainer>\n          <Box>\n            <h2>이번주 시간사용 통계</h2>\n            <h3>\n              자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n              <Percent data={mainTimesPercent.improvePercent}>\n                {mainTimesPercent.improvePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n              <Percent data={mainTimesPercent.privatePercent}>\n                {mainTimesPercent.privatePercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n              <Percent data={mainTimesPercent.worksPercent}>\n                {mainTimesPercent.worksPercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n              <Percent data={mainTimesPercent.sleepPercent}>\n                {mainTimesPercent.sleepPercent}%\n              </Percent>\n            </h3>\n          </Box>\n          <Box>\n            <h2>기타 시간사용 통계</h2>\n            <h3>\n              공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n              <Percent data={detailTimesPercent.studyPercent}>\n                {detailTimesPercent.studyPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n              <Percent data={detailTimesPercent.gamePercent}>\n                {detailTimesPercent.gamePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              독서 및 신문:{\" \"}\n              <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n              <Percent data={detailTimesPercent.readingPercent}>\n                {detailTimesPercent.readingPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              평균 기상시간: <Time>{sleepingAverage.thisWakeUp}</Time>\n              <TimeDiff data={detailTimesPercent.wakePercent}>\n                {detailTimesPercent.wakePercent}%\n              </TimeDiff>\n            </h3>\n            <h3>\n              평균 취침시간: <Time>{sleepingAverage.thisNight}</Time>\n              <TimeDiff data={detailTimesPercent.nightPercent}>\n                {detailTimesPercent.nightPercent}%\n              </TimeDiff>\n            </h3>\n          </Box>\n        </BoxContainer>\n        <ChartBox>\n          <Chart thisWeek={weekList} lastWeek={lastWeekList}></Chart>\n        </ChartBox>\n      </Container>\n    </>\n  );\n}\n\nexport default AnalysisWeek;\n"]},"metadata":{},"sourceType":"module"}