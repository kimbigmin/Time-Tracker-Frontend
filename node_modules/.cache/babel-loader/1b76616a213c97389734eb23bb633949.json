{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\nimport { Box, Time, Percent, TimeDiff, Container, BoxContainer, ChartBox, TopBox } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnalysisWeek() {\n  _s();\n\n  const [data, setData] = useState([]); // 데이터 불러오기\n\n  useEffect(() => {\n    getData(setData);\n  }, []); // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const standard = new Date().toDateString(); // 오늘 날짜\n\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  console.log(thisMonth);\n  const monthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n  console.log(monthList); // 데이터에서 이번주, 저번주 리스트 뽑아오기\n\n  const weekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = weekList.map(item => item.entireTime);\n  const lastEntireTimes = lastWeekList.map(item => item.entireTime);\n  const monthEntireTimes = monthList.map(item => item.entireTime); // 이번주 각 항목에 대한 시간 합계 구하기\n\n  const sumTimes = getMainSumTimes(entireTimes); // 저번주 각 항목에 대한 시간 합계 구하기\n\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes); // 저번주와의 퍼센트 비교값 구하기\n\n  const getMainTimesPercent = (thisMainSumtimes, lastMainSumTimes) => {\n    return {\n      improvePercent: getPercentage(thisMainSumtimes.sumImprove, lastMainSumTimes.sumImprove),\n      privatePercent: getPercentage(thisMainSumtimes.sumPrivate, lastMainSumTimes.sumPrivate),\n      worksPercent: getPercentage(thisMainSumtimes.sumWorks, lastMainSumTimes.sumWorks),\n      sleepPercent: getPercentage(thisMainSumtimes.sumSleep, lastMainSumTimes.sumSleep)\n    };\n  };\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumTimes.sumImprove, lastSumTimes.sumImprove),\n    privatePercent: getPercentage(sumTimes.sumPrivate, lastSumTimes.sumPrivate),\n    worksPercent: getPercentage(sumTimes.sumWorks, lastSumTimes.sumWorks),\n    sleepPercent: getPercentage(sumTimes.sumSleep, lastSumTimes.sumSleep)\n  };\n  const detailTimesPercent = {\n    studyPercent: getPercentage(sumDetailTimes.sumStudy, lastSumDetailTimes.sumStudy),\n    gamePercent: getPercentage(sumDetailTimes.sumGame, lastSumDetailTimes.sumGame),\n    readingPercent: getPercentage(sumDetailTimes.sumReading, lastSumDetailTimes.sumReading),\n    wakePercent: getPercentage(sumDetailTimes.sumWakeUp, lastSumDetailTimes.sumWakeUp),\n    nightPercent: getPercentage(sumDetailTimes.sumNight, lastSumDetailTimes.sumNight)\n  };\n  const sleepingAverage = {\n    thisWakeUp: getAverageTime(sumDetailTimes.sumWakeUp),\n    lastWakeUp: getAverageTime(lastSumDetailTimes.sumWakeUp),\n    thisNight: getAverageTime(sumDetailTimes.sumNight),\n    lastNight: getAverageTime(lastSumDetailTimes.sumNight)\n  }; // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uC8FC\\uAC04\\uBD84\\uC11D \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"year\",\n        id: \"cars\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"\\uB144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"month\",\n        id: \"cars\",\n        children: month.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el,\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"\\uC6D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"week\",\n        id: \"cars\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"week\",\n        children: \"\\uC8FC\\uCC28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BoxContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC774\\uBC88\\uC8FC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumImprove)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.improvePercent,\n              children: [mainTimesPercent.improvePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumPrivate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.privatePercent,\n              children: [mainTimesPercent.privatePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumWorks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.worksPercent,\n              children: [mainTimesPercent.worksPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumSleep)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.sleepPercent,\n              children: [mainTimesPercent.sleepPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumStudy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.studyPercent,\n              children: [detailTimesPercent.studyPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumGame)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.gamePercent,\n              children: [detailTimesPercent.gamePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumReading)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.readingPercent,\n              children: [detailTimesPercent.readingPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uAE30\\uC0C1\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisWakeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.wakePercent,\n              children: [detailTimesPercent.wakePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uCDE8\\uCE68\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisNight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.nightPercent,\n              children: [detailTimesPercent.nightPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartBox, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          thisWeek: weekList,\n          lastWeek: lastWeekList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnalysisWeek, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = AnalysisWeek;\nexport default AnalysisWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisWeek\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx"],"names":["React","useEffect","useState","Header","Chart","getData","getLastMondays","getMainSumTimes","getDetailSumTimes","convertMinToTime","getLastSunday","getPercentage","getAverageTime","Box","Time","Percent","TimeDiff","Container","BoxContainer","ChartBox","TopBox","AnalysisWeek","data","setData","standard","Date","toDateString","monday","sunday","lastMonday","lastSunday","thisMonth","getMonth","thisYear","getFullYear","console","log","monthList","filter","item","date","includes","weekList","getTime","lastWeekList","entireTimes","map","entireTime","lastEntireTimes","monthEntireTimes","sumTimes","lastSumTimes","sumDetailTimes","lastSumDetailTimes","sumMonthTimes","getMainTimesPercent","thisMainSumtimes","lastMainSumTimes","improvePercent","sumImprove","privatePercent","sumPrivate","worksPercent","sumWorks","sleepPercent","sumSleep","mainTimesPercent","detailTimesPercent","studyPercent","sumStudy","gamePercent","sumGame","readingPercent","sumReading","wakePercent","sumWakeUp","nightPercent","sumNight","sleepingAverage","thisWakeUp","lastWakeUp","thisNight","lastNight","month","el"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\n\nimport { OneDate } from \"../../type\";\nimport {\n  Box,\n  Time,\n  Percent,\n  TimeDiff,\n  Container,\n  BoxContainer,\n  ChartBox,\n  TopBox,\n} from \"./style\";\n\nfunction AnalysisWeek() {\n  const [data, setData] = useState([]);\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const standard = new Date().toDateString(); // 오늘 날짜\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n\n  console.log(thisMonth);\n  const monthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n\n  console.log(monthList);\n\n  // 데이터에서 이번주, 저번주 리스트 뽑아오기\n  const weekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList);\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = weekList.map((item: OneDate) => item.entireTime);\n  const lastEntireTimes = lastWeekList.map((item: OneDate) => item.entireTime);\n  const monthEntireTimes = monthList.map((item: OneDate) => item.entireTime);\n\n  // 이번주 각 항목에 대한 시간 합계 구하기\n  const sumTimes = getMainSumTimes(entireTimes);\n  // 저번주 각 항목에 대한 시간 합계 구하기\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes);\n  // 저번주와의 퍼센트 비교값 구하기\n\n  const getMainTimesPercent = (\n    thisMainSumtimes: any,\n    lastMainSumTimes: any\n  ) => {\n    return {\n      improvePercent: getPercentage(\n        thisMainSumtimes.sumImprove,\n        lastMainSumTimes.sumImprove\n      ),\n      privatePercent: getPercentage(\n        thisMainSumtimes.sumPrivate,\n        lastMainSumTimes.sumPrivate\n      ),\n      worksPercent: getPercentage(\n        thisMainSumtimes.sumWorks,\n        lastMainSumTimes.sumWorks\n      ),\n      sleepPercent: getPercentage(\n        thisMainSumtimes.sumSleep,\n        lastMainSumTimes.sumSleep\n      ),\n    };\n  };\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumTimes.sumImprove, lastSumTimes.sumImprove),\n    privatePercent: getPercentage(sumTimes.sumPrivate, lastSumTimes.sumPrivate),\n    worksPercent: getPercentage(sumTimes.sumWorks, lastSumTimes.sumWorks),\n    sleepPercent: getPercentage(sumTimes.sumSleep, lastSumTimes.sumSleep),\n  };\n\n  const detailTimesPercent = {\n    studyPercent: getPercentage(\n      sumDetailTimes.sumStudy,\n      lastSumDetailTimes.sumStudy\n    ),\n    gamePercent: getPercentage(\n      sumDetailTimes.sumGame,\n      lastSumDetailTimes.sumGame\n    ),\n    readingPercent: getPercentage(\n      sumDetailTimes.sumReading,\n      lastSumDetailTimes.sumReading\n    ),\n    wakePercent: getPercentage(\n      sumDetailTimes.sumWakeUp,\n      lastSumDetailTimes.sumWakeUp\n    ),\n    nightPercent: getPercentage(\n      sumDetailTimes.sumNight,\n      lastSumDetailTimes.sumNight\n    ),\n  };\n  const sleepingAverage = {\n    thisWakeUp: getAverageTime(sumDetailTimes.sumWakeUp),\n    lastWakeUp: getAverageTime(lastSumDetailTimes.sumWakeUp),\n    thisNight: getAverageTime(sumDetailTimes.sumNight),\n    lastNight: getAverageTime(lastSumDetailTimes.sumNight),\n  };\n  // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  return (\n    <>\n      <Header />\n      <TopBox>\n        <h2 className=\"title\">주간분석 페이지</h2>\n\n        <select name=\"year\" id=\"cars\">\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <label htmlFor=\"year\">년</label>\n        <select name=\"month\" id=\"cars\">\n          {month.map((el) => {\n            return <option value={el}>{el}</option>;\n          })}\n        </select>\n        <label htmlFor=\"month\">월</label>\n        <select name=\"week\" id=\"cars\">\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n        <label htmlFor=\"week\">주차</label>\n      </TopBox>\n\n      <Container>\n        <BoxContainer>\n          <Box>\n            <h2>이번주 시간사용 통계</h2>\n            <h3>\n              자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n              <Percent data={mainTimesPercent.improvePercent}>\n                {mainTimesPercent.improvePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n              <Percent data={mainTimesPercent.privatePercent}>\n                {mainTimesPercent.privatePercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n              <Percent data={mainTimesPercent.worksPercent}>\n                {mainTimesPercent.worksPercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n              <Percent data={mainTimesPercent.sleepPercent}>\n                {mainTimesPercent.sleepPercent}%\n              </Percent>\n            </h3>\n          </Box>\n          <Box>\n            <h2>기타 시간사용 통계</h2>\n            <h3>\n              공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n              <Percent data={detailTimesPercent.studyPercent}>\n                {detailTimesPercent.studyPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n              <Percent data={detailTimesPercent.gamePercent}>\n                {detailTimesPercent.gamePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              독서 및 신문:{\" \"}\n              <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n              <Percent data={detailTimesPercent.readingPercent}>\n                {detailTimesPercent.readingPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              평균 기상시간: <Time>{sleepingAverage.thisWakeUp}</Time>\n              <TimeDiff data={detailTimesPercent.wakePercent}>\n                {detailTimesPercent.wakePercent}%\n              </TimeDiff>\n            </h3>\n            <h3>\n              평균 취침시간: <Time>{sleepingAverage.thisNight}</Time>\n              <TimeDiff data={detailTimesPercent.nightPercent}>\n                {detailTimesPercent.nightPercent}%\n              </TimeDiff>\n            </h3>\n          </Box>\n        </BoxContainer>\n        <ChartBox>\n          <Chart thisWeek={weekList} lastWeek={lastWeekList}></Chart>\n        </ChartBox>\n      </Container>\n    </>\n  );\n}\n\nexport default AnalysisWeek;\n"]},"metadata":{},"sourceType":"module"}