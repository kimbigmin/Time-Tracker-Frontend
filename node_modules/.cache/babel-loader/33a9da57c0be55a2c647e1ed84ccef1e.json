{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst labels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    thisWeek,\n    lastWeek\n  } = _ref;\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\"\n  });\n\n  const getChartData = dayData => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(dayData.entireTime.entireImprove.split(\":\")[0]);\n\n      case \"PRIVATE_TIME\":\n        return Number(dayData.entireTime.entirePrivate.split(\":\")[0]);\n\n      case \"SLEEP_TIME\":\n        return Number(dayData.entireTime.entireSleep.split(\":\")[0]);\n\n      case \"WORK_TIME\":\n        return Number(dayData.entireTime.entireWorks.split(\":\")[0]);\n\n      case \"STUDY_TIME\":\n        return Number(dayData.improve.study.split(\":\")[0]);\n\n      case \"READING_TIME\":\n        return Number(dayData.improve.reading.split(\":\")[0]);\n    }\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`\n      }\n    }\n  };\n  const data = {\n    labels,\n    datasets: [{\n      label: \"지난 주\",\n      data: lastWeek.map(day => {\n        console.log(day.entireTime.entireImprove);\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }, {\n      label: \"이번 주\",\n      data: thisWeek.map(day => {\n        console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }]\n  };\n\n  const listClickHandler = e => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel = e.target.dataset.labels;\n      setSelectedList({ ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onClick: listClickHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"IMPROVE_TIME\",\n        children: \"\\uC790\\uAE30\\uACC4\\uBC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"PRIVATE_TIME\",\n        children: \"\\uAC1C\\uC778\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"WORK_TIME\",\n        children: \"\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"SLEEP_TIME\",\n        children: \"\\uCDE8\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"STUDY_TIME\",\n        children: \"\\uACF5\\uBD80\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"READING_TIME\",\n        children: \"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chart, \"dxMtVZOfa4sSSJzOmUraeqj+7sk=\");\n\n_c = Chart;\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 50%;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n_c2 = TopBar;\nexport default Chart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"TopBar\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx"],"names":["React","useState","Bar","styled","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","register","labels","thisWeek","lastWeek","selectedList","setSelectedList","list","title","getChartData","dayData","Number","entireTime","entireImprove","split","entirePrivate","entireSleep","entireWorks","improve","study","reading","options","responsive","plugins","legend","position","display","text","data","datasets","label","map","day","console","log","backgroundColor","listClickHandler","e","target","tagName","clickedLabel","dataset","textContent","TopBar","ul"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst labels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\nfunction Chart({ thisWeek, lastWeek }: any) {\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\",\n  });\n\n  const getChartData = (dayData: any) => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(dayData.entireTime.entireImprove.split(\":\")[0]);\n      case \"PRIVATE_TIME\":\n        return Number(dayData.entireTime.entirePrivate.split(\":\")[0]);\n      case \"SLEEP_TIME\":\n        return Number(dayData.entireTime.entireSleep.split(\":\")[0]);\n      case \"WORK_TIME\":\n        return Number(dayData.entireTime.entireWorks.split(\":\")[0]);\n      case \"STUDY_TIME\":\n        return Number(dayData.improve.study.split(\":\")[0]);\n      case \"READING_TIME\":\n        return Number(dayData.improve.reading.split(\":\")[0]);\n    }\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`,\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"지난 주\",\n        data: lastWeek.map((day: any) => {\n          console.log(day.entireTime.entireImprove);\n          return getChartData(day);\n        }),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n      {\n        label: \"이번 주\",\n        data: thisWeek.map((day: any) => {\n          console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n          return getChartData(day);\n        }),\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      },\n    ],\n  };\n\n  const listClickHandler = (e: any): void => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel: string = e.target.dataset.labels;\n      setSelectedList({\n        ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent,\n      });\n    }\n  };\n\n  return (\n    <>\n      <TopBar onClick={listClickHandler}>\n        <li data-labels=\"IMPROVE_TIME\">자기계발</li>\n        <li data-labels=\"PRIVATE_TIME\">개인시간</li>\n        <li data-labels=\"WORK_TIME\">일</li>\n        <li data-labels=\"SLEEP_TIME\">취침</li>\n        <li data-labels=\"STUDY_TIME\">공부시간</li>\n        <li data-labels=\"READING_TIME\">독서 및 신문</li>\n      </TopBar>\n      <Bar options={options} data={data} />\n    </>\n  );\n}\n\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 50%;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}