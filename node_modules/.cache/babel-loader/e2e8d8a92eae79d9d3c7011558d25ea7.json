{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend); // const labels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    thisList,\n    lastList,\n    pageType,\n    restList\n  } = _ref;\n  console.log(thisList, lastList);\n  const {\n    twoMonthAgo,\n    threeMonthAgo,\n    fourMonthAgo,\n    fiveMonthAgo\n  } = restList;\n  console.log(restList);\n  const monthList = [{\n    beforeMonth: 0,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(thisList)),\n      ...getDetailSumTimes(thisList)\n    }\n  }, {\n    beforeMonth: 1,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(lastList)),\n      ...getDetailSumTimes(lastList)\n    }\n  }, {\n    beforeMonth: 2,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(twoMonthAgo)),\n      ...getDetailSumTimes(twoMonthAgo)\n    }\n  }, {\n    beforeMonth: 3,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(threeMonthAgo)),\n      ...getDetailSumTimes(threeMonthAgo)\n    }\n  }, {\n    beforeMonth: 4,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(fourMonthAgo)),\n      ...getDetailSumTimes(fourMonthAgo)\n    }\n  }, {\n    beforeMonth: 5,\n    sumTimes: { ...getMainSumTimes(getEntireTimes(fiveMonthAgo)),\n      ...getDetailSumTimes(fiveMonthAgo)\n    }\n  }];\n  console.log(monthList);\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\"\n  });\n\n  const getChartData = dayData => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(dayData.entireTime.entireImprove.split(\":\")[0]);\n\n      case \"PRIVATE_TIME\":\n        return Number(dayData.entireTime.entirePrivate.split(\":\")[0]);\n\n      case \"SLEEP_TIME\":\n        return Number(dayData.entireTime.entireSleep.split(\":\")[0]);\n\n      case \"WORK_TIME\":\n        return Number(dayData.entireTime.entireWorks.split(\":\")[0]);\n\n      case \"STUDY_TIME\":\n        return Number(dayData.improve.study.split(\":\")[0]);\n\n      case \"READING_TIME\":\n        return Number(dayData.improve.reading.split(\":\")[0]);\n    }\n  };\n\n  const getMonthChartData = monthData => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumImprove).split(\"시간\")[0]);\n\n      case \"PRIVATE_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumPrivate).split(\"시간\")[0]);\n\n      case \"SLEEP_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumSleep).split(\"시간\")[0]);\n\n      case \"WORK_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumWorks).split(\"시간\")[0]);\n\n      case \"STUDY_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumStudy).split(\"시간\")[0]);\n\n      case \"READING_TIME\":\n        return Number(convertMinToTime(monthData.sumTimes.sumReading).split(\"시간\")[0]);\n    }\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`\n      }\n    }\n  };\n  const weekDataSets = [{\n    label: `지난${pageType[1]}`,\n    data: lastList.map(day => {\n      console.log(day.entireTime.entireImprove);\n      return getChartData(day);\n    }),\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n  }, {\n    label: `이번${pageType[1]}`,\n    data: thisList.map(day => {\n      console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n      return getChartData(day);\n    }),\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n  }];\n  const monthLabels = [\"12월\", \"1월\", \"2월\", \"3월\", \"4월\"];\n  const monthDataSets = [{\n    label: \"자기계발\",\n    data: monthList.map(month => {\n      return getMonthChartData(month);\n    }),\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n  }];\n  console.log(monthDataSets.data);\n  const data = {\n    labels: monthLabels,\n    datasets: monthDataSets\n  };\n\n  const listClickHandler = e => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel = e.target.dataset.labels;\n      setSelectedList({ ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onClick: listClickHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"IMPROVE_TIME\",\n        children: \"\\uC790\\uAE30\\uACC4\\uBC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"PRIVATE_TIME\",\n        children: \"\\uAC1C\\uC778\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"WORK_TIME\",\n        children: \"\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"SLEEP_TIME\",\n        children: \"\\uCDE8\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"STUDY_TIME\",\n        children: \"\\uACF5\\uBD80\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-labels\": \"READING_TIME\",\n        children: \"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chart, \"dxMtVZOfa4sSSJzOmUraeqj+7sk=\");\n\n_c = Chart;\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 5rem;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n_c2 = TopBar;\nexport default Chart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"TopBar\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/analysis-week/Chart.tsx"],"names":["React","useState","Bar","styled","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","getMainSumTimes","getDetailSumTimes","getEntireTimes","convertMinToTime","register","thisList","lastList","pageType","restList","console","log","twoMonthAgo","threeMonthAgo","fourMonthAgo","fiveMonthAgo","monthList","beforeMonth","sumTimes","selectedList","setSelectedList","list","title","getChartData","dayData","Number","entireTime","entireImprove","split","entirePrivate","entireSleep","entireWorks","improve","study","reading","getMonthChartData","monthData","sumImprove","sumPrivate","sumSleep","sumWorks","sumStudy","sumReading","options","responsive","plugins","legend","position","display","text","weekDataSets","label","data","map","day","backgroundColor","monthLabels","monthDataSets","month","labels","datasets","listClickHandler","e","target","tagName","clickedLabel","dataset","textContent","TopBar","ul"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// const labels = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\nfunction Chart({ thisList, lastList, pageType, restList }: any) {\n  console.log(thisList, lastList);\n  const { twoMonthAgo, threeMonthAgo, fourMonthAgo, fiveMonthAgo } = restList;\n  console.log(restList);\n  const monthList = [\n    {\n      beforeMonth: 0,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(thisList)),\n        ...getDetailSumTimes(thisList),\n      },\n    },\n    {\n      beforeMonth: 1,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(lastList)),\n        ...getDetailSumTimes(lastList),\n      },\n    },\n    {\n      beforeMonth: 2,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(twoMonthAgo)),\n        ...getDetailSumTimes(twoMonthAgo),\n      },\n    },\n    {\n      beforeMonth: 3,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(threeMonthAgo)),\n        ...getDetailSumTimes(threeMonthAgo),\n      },\n    },\n    {\n      beforeMonth: 4,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(fourMonthAgo)),\n        ...getDetailSumTimes(fourMonthAgo),\n      },\n    },\n    {\n      beforeMonth: 5,\n      sumTimes: {\n        ...getMainSumTimes(getEntireTimes(fiveMonthAgo)),\n        ...getDetailSumTimes(fiveMonthAgo),\n      },\n    },\n  ];\n  console.log(monthList);\n  const [selectedList, setSelectedList] = useState({\n    list: \"IMPROVE_TIME\",\n    title: \"자기계발\",\n  });\n\n  const getChartData = (dayData: any) => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(dayData.entireTime.entireImprove.split(\":\")[0]);\n      case \"PRIVATE_TIME\":\n        return Number(dayData.entireTime.entirePrivate.split(\":\")[0]);\n      case \"SLEEP_TIME\":\n        return Number(dayData.entireTime.entireSleep.split(\":\")[0]);\n      case \"WORK_TIME\":\n        return Number(dayData.entireTime.entireWorks.split(\":\")[0]);\n      case \"STUDY_TIME\":\n        return Number(dayData.improve.study.split(\":\")[0]);\n      case \"READING_TIME\":\n        return Number(dayData.improve.reading.split(\":\")[0]);\n    }\n  };\n\n  const getMonthChartData = (monthData: any) => {\n    switch (selectedList.list) {\n      case \"IMPROVE_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumImprove).split(\"시간\")[0]\n        );\n      case \"PRIVATE_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumPrivate).split(\"시간\")[0]\n        );\n      case \"SLEEP_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumSleep).split(\"시간\")[0]\n        );\n      case \"WORK_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumWorks).split(\"시간\")[0]\n        );\n      case \"STUDY_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumStudy).split(\"시간\")[0]\n        );\n      case \"READING_TIME\":\n        return Number(\n          convertMinToTime(monthData.sumTimes.sumReading).split(\"시간\")[0]\n        );\n    }\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: `${selectedList.title} 시간 통계`,\n      },\n    },\n  };\n\n  const weekDataSets = [\n    {\n      label: `지난${pageType[1]}`,\n      data: lastList.map((day: any) => {\n        console.log(day.entireTime.entireImprove);\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: `이번${pageType[1]}`,\n      data: thisList.map((day: any) => {\n        console.log(Number(day.entireTime.entireImprove.split(\":\")[0]));\n        return getChartData(day);\n      }),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ];\n\n  const monthLabels = [\"12월\", \"1월\", \"2월\", \"3월\", \"4월\"];\n\n  const monthDataSets = [\n    {\n      label: \"자기계발\",\n      data: monthList.map((month) => {\n        return getMonthChartData(month);\n      }),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ];\n  console.log(monthDataSets.data);\n  const data = {\n    labels: monthLabels,\n    datasets: monthDataSets,\n  };\n\n  const listClickHandler = (e: any): void => {\n    if (e.target.tagName === \"LI\") {\n      const clickedLabel: string = e.target.dataset.labels;\n      setSelectedList({\n        ...selectedList,\n        list: clickedLabel,\n        title: e.target.textContent,\n      });\n    }\n  };\n\n  return (\n    <>\n      <TopBar onClick={listClickHandler}>\n        <li data-labels=\"IMPROVE_TIME\">자기계발</li>\n        <li data-labels=\"PRIVATE_TIME\">개인시간</li>\n        <li data-labels=\"WORK_TIME\">일</li>\n        <li data-labels=\"SLEEP_TIME\">취침</li>\n        <li data-labels=\"STUDY_TIME\">공부시간</li>\n        <li data-labels=\"READING_TIME\">독서 및 신문</li>\n      </TopBar>\n      <Bar options={options} data={data} />\n    </>\n  );\n}\n\nconst TopBar = styled.ul`\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  margin-bottom: 2rem;\n  li {\n    width: 5rem;\n    color: #36424f;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.8rem;\n    padding-bottom: 0.2rem;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  li:hover {\n    border-bottom: 2px solid #1671cc;\n    transition-property: border-bottom;\n    transition-duration: 1s;\n  }\n`;\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}