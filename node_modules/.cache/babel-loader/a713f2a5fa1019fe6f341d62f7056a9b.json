{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport sumHoursMinutes from \"../../utils/sumTime\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\nimport { Box, Time, Percent, TimeDiff, Container, BoxContainer, ChartBox } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnalysisWeek() {\n  _s();\n\n  const [data, setData] = useState([]); // 데이터 불러오기\n\n  useEffect(() => {\n    getData(setData);\n  }, []); // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const standard = new Date(); // 오늘 날짜\n\n  const monday = new Date(getLastMondays(standard, 1)).getTime();\n  const sunday = new Date(getLastSunday(monday)).getTime();\n  const lastMonday = new Date(getLastMondays(standard, 2)).getTime();\n  const lastSunday = new Date(getLastSunday(lastMonday)).getTime(); // 데이터에서 이번주, 저번주 리스트 뽑아오기\n\n  const weekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  }); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = weekList.map(item => item.entireTime);\n  const lastEntireTimes = lastWeekList.map(item => item.entireTime);\n\n  const getSumTime = function (entire, time) {\n    let detailTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n    if (detailTime !== \"\") {\n      return entire.reduce((acc, obj) => {\n        return acc + sumHoursMinutes(obj[time][detailTime]);\n      }, 0);\n    } else {\n      return entire.reduce((acc, obj) => {\n        return acc + sumHoursMinutes(obj[time]);\n      }, 0);\n    }\n  }; // 이번주 각 항목에 대한 시간 합계 구하기\n\n\n  const sumTimes = {\n    sumImprove: getSumTime(entireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(entireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(entireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(entireTimes, \"entireSleep\")\n  }; // 저번주 각 항목에 대한 시간 합계 구하기\n\n  const lastSumTimes = {\n    sumImprove: getSumTime(lastEntireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(lastEntireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(lastEntireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(lastEntireTimes, \"entireSleep\")\n  };\n  const sumDetailTimes = {\n    sumStudy: getSumTime(weekList, \"improve\", \"study\"),\n    sumGame: getSumTime(weekList, \"private\", \"game\"),\n    sumReading: getSumTime(weekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(weekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(weekList, \"sleeping\", \"sleep\")\n  };\n  const lastSumDetailTimes = {\n    sumStudy: getSumTime(lastWeekList, \"improve\", \"study\"),\n    sumGame: getSumTime(lastWeekList, \"private\", \"game\"),\n    sumReading: getSumTime(lastWeekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(lastWeekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(lastWeekList, \"sleeping\", \"sleep\")\n  }; // 저번주와의 퍼센트 비교값 구하기\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumTimes.sumImprove, lastSumTimes.sumImprove),\n    privatePercent: getPercentage(sumTimes.sumPrivate, lastSumTimes.sumPrivate),\n    worksPercent: getPercentage(sumTimes.sumWorks, lastSumTimes.sumWorks),\n    sleepPercent: getPercentage(sumTimes.sumSleep, lastSumTimes.sumSleep)\n  };\n  const detailTimesPercent = {\n    studyPercent: getPercentage(sumDetailTimes.sumStudy, lastSumDetailTimes.sumStudy),\n    gamePercent: getPercentage(sumDetailTimes.sumGame, lastSumDetailTimes.sumGame),\n    readingPercent: getPercentage(sumDetailTimes.sumReading, lastSumDetailTimes.sumReading),\n    wakePercent: getPercentage(sumDetailTimes.sumWakeUp, lastSumDetailTimes.sumWakeUp),\n    nightPercent: getPercentage(sumDetailTimes.sumNight, lastSumDetailTimes.sumNight)\n  };\n  const sleepingAverage = {\n    thisWakeUp: getAverageTime(sumDetailTimes.sumWakeUp),\n    lastWakeUp: getAverageTime(lastSumDetailTimes.sumWakeUp),\n    thisNight: getAverageTime(sumDetailTimes.sumNight),\n    lastNight: getAverageTime(lastSumDetailTimes.sumNight)\n  }; // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uAC04\\uBD84\\uC11D \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"cars\",\n        id: \"cars\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cars\",\n        children: \"\\uB144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"cars\",\n        id: \"cars\",\n        children: month.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el,\n            children: [\"$\", el]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cars\",\n        children: \"\\uC6D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"cars\",\n        id: \"cars\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cars\",\n        children: \"\\uC8FC\\uCC28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BoxContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC774\\uBC88\\uC8FC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumImprove)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.improvePercent,\n              children: [mainTimesPercent.improvePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumPrivate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.privatePercent,\n              children: [mainTimesPercent.privatePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumWorks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.worksPercent,\n              children: [mainTimesPercent.worksPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumSleep)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.sleepPercent,\n              children: [mainTimesPercent.sleepPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumStudy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.studyPercent,\n              children: [detailTimesPercent.studyPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumGame)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.gamePercent,\n              children: [detailTimesPercent.gamePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumReading)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.readingPercent,\n              children: [detailTimesPercent.readingPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisWakeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.wakePercent,\n              children: [detailTimesPercent.wakePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0\\uAE30\\uC0C1: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisNight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.nightPercent,\n              children: [detailTimesPercent.nightPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartBox, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnalysisWeek, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = AnalysisWeek;\nexport default AnalysisWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisWeek\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx"],"names":["React","useEffect","useState","Header","Chart","getData","getLastMondays","sumHoursMinutes","convertMinToTime","getLastSunday","getPercentage","getAverageTime","Box","Time","Percent","TimeDiff","Container","BoxContainer","ChartBox","AnalysisWeek","data","setData","standard","Date","monday","getTime","sunday","lastMonday","lastSunday","weekList","filter","item","date","console","log","lastWeekList","entireTimes","map","entireTime","lastEntireTimes","getSumTime","entire","time","detailTime","reduce","acc","obj","sumTimes","sumImprove","sumPrivate","sumWorks","sumSleep","lastSumTimes","sumDetailTimes","sumStudy","sumGame","sumReading","sumWakeUp","sumNight","lastSumDetailTimes","mainTimesPercent","improvePercent","privatePercent","worksPercent","sleepPercent","detailTimesPercent","studyPercent","gamePercent","readingPercent","wakePercent","nightPercent","sleepingAverage","thisWakeUp","lastWakeUp","thisNight","lastNight","month","el"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport sumHoursMinutes from \"../../utils/sumTime\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getPercentage } from \"../../utils/getPercentage\";\nimport { getAverageTime } from \"../../utils/getAverageTime\";\n\nimport { OneDate } from \"../../type\";\nimport {\n  Box,\n  Time,\n  Percent,\n  TimeDiff,\n  Container,\n  BoxContainer,\n  ChartBox,\n} from \"./style\";\n\nfunction AnalysisWeek() {\n  const [data, setData] = useState([]);\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const standard = new Date(); // 오늘 날짜\n  const monday = new Date(getLastMondays(standard, 1)).getTime();\n  const sunday = new Date(getLastSunday(monday)).getTime();\n  const lastMonday = new Date(getLastMondays(standard, 2)).getTime();\n  const lastSunday = new Date(getLastSunday(lastMonday)).getTime();\n\n  // 데이터에서 이번주, 저번주 리스트 뽑아오기\n  const weekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = weekList.map((item: OneDate) => item.entireTime);\n\n  const lastEntireTimes = lastWeekList.map((item: OneDate) => item.entireTime);\n\n  const getSumTime = (entire: any, time: string, detailTime: string = \"\") => {\n    if (detailTime !== \"\") {\n      return entire.reduce((acc: any, obj: any) => {\n        return acc + sumHoursMinutes(obj[time][detailTime]);\n      }, 0);\n    } else {\n      return entire.reduce((acc: any, obj: any) => {\n        return acc + sumHoursMinutes(obj[time]);\n      }, 0);\n    }\n  };\n  // 이번주 각 항목에 대한 시간 합계 구하기\n  const sumTimes = {\n    sumImprove: getSumTime(entireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(entireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(entireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(entireTimes, \"entireSleep\"),\n  };\n  // 저번주 각 항목에 대한 시간 합계 구하기\n  const lastSumTimes = {\n    sumImprove: getSumTime(lastEntireTimes, \"entireImprove\"),\n    sumPrivate: getSumTime(lastEntireTimes, \"entirePrivate\"),\n    sumWorks: getSumTime(lastEntireTimes, \"entireWorks\"),\n    sumSleep: getSumTime(lastEntireTimes, \"entireSleep\"),\n  };\n\n  const sumDetailTimes = {\n    sumStudy: getSumTime(weekList, \"improve\", \"study\"),\n    sumGame: getSumTime(weekList, \"private\", \"game\"),\n    sumReading: getSumTime(weekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(weekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(weekList, \"sleeping\", \"sleep\"),\n  };\n\n  const lastSumDetailTimes = {\n    sumStudy: getSumTime(lastWeekList, \"improve\", \"study\"),\n    sumGame: getSumTime(lastWeekList, \"private\", \"game\"),\n    sumReading: getSumTime(lastWeekList, \"improve\", \"reading\"),\n    sumWakeUp: getSumTime(lastWeekList, \"sleeping\", \"wake\"),\n    sumNight: getSumTime(lastWeekList, \"sleeping\", \"sleep\"),\n  };\n\n  // 저번주와의 퍼센트 비교값 구하기\n\n  const mainTimesPercent = {\n    improvePercent: getPercentage(sumTimes.sumImprove, lastSumTimes.sumImprove),\n    privatePercent: getPercentage(sumTimes.sumPrivate, lastSumTimes.sumPrivate),\n    worksPercent: getPercentage(sumTimes.sumWorks, lastSumTimes.sumWorks),\n    sleepPercent: getPercentage(sumTimes.sumSleep, lastSumTimes.sumSleep),\n  };\n\n  const detailTimesPercent = {\n    studyPercent: getPercentage(\n      sumDetailTimes.sumStudy,\n      lastSumDetailTimes.sumStudy\n    ),\n    gamePercent: getPercentage(\n      sumDetailTimes.sumGame,\n      lastSumDetailTimes.sumGame\n    ),\n    readingPercent: getPercentage(\n      sumDetailTimes.sumReading,\n      lastSumDetailTimes.sumReading\n    ),\n    wakePercent: getPercentage(\n      sumDetailTimes.sumWakeUp,\n      lastSumDetailTimes.sumWakeUp\n    ),\n    nightPercent: getPercentage(\n      sumDetailTimes.sumNight,\n      lastSumDetailTimes.sumNight\n    ),\n  };\n  const sleepingAverage = {\n    thisWakeUp: getAverageTime(sumDetailTimes.sumWakeUp),\n    lastWakeUp: getAverageTime(lastSumDetailTimes.sumWakeUp),\n    thisNight: getAverageTime(sumDetailTimes.sumNight),\n    lastNight: getAverageTime(lastSumDetailTimes.sumNight),\n  };\n  // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  return (\n    <>\n      <Header />\n      <div>\n        <h2>주간분석 페이지</h2>\n\n        <select name=\"cars\" id=\"cars\">\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <label htmlFor=\"cars\">년</label>\n        <select name=\"cars\" id=\"cars\">\n          {month.map((el) => {\n            return <option value={el}>${el}</option>;\n          })}\n        </select>\n        <label htmlFor=\"cars\">월</label>\n        <select name=\"cars\" id=\"cars\">\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <label htmlFor=\"cars\">주차</label>\n      </div>\n\n      <Container>\n        <BoxContainer>\n          <Box>\n            <h2>이번주 시간사용 통계</h2>\n            <h3>\n              자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n              <Percent data={mainTimesPercent.improvePercent}>\n                {mainTimesPercent.improvePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n              <Percent data={mainTimesPercent.privatePercent}>\n                {mainTimesPercent.privatePercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n              <Percent data={mainTimesPercent.worksPercent}>\n                {mainTimesPercent.worksPercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n              <Percent data={mainTimesPercent.sleepPercent}>\n                {mainTimesPercent.sleepPercent}%\n              </Percent>\n            </h3>\n          </Box>\n          <Box>\n            <h2>기타 시간사용 통계</h2>\n            <h3>\n              공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n              <Percent data={detailTimesPercent.studyPercent}>\n                {detailTimesPercent.studyPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n              <Percent data={detailTimesPercent.gamePercent}>\n                {detailTimesPercent.gamePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              독서 및 신문:{\" \"}\n              <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n              <Percent data={detailTimesPercent.readingPercent}>\n                {detailTimesPercent.readingPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              평균취침: <Time>{sleepingAverage.thisWakeUp}</Time>\n              <TimeDiff data={detailTimesPercent.wakePercent}>\n                {detailTimesPercent.wakePercent}%\n              </TimeDiff>\n            </h3>\n            <h3>\n              평균기상: <Time>{sleepingAverage.thisNight}</Time>\n              <TimeDiff data={detailTimesPercent.nightPercent}>\n                {detailTimesPercent.nightPercent}%\n              </TimeDiff>\n            </h3>\n          </Box>\n        </BoxContainer>\n        <ChartBox>\n          <Chart></Chart>\n        </ChartBox>\n      </Container>\n    </>\n  );\n}\n\nexport default AnalysisWeek;\n"]},"metadata":{},"sourceType":"module"}