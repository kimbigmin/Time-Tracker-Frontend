{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/DoughnutChart/DoughnutChart.tsx\";\nimport { Container, Box } from \"./style\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { getMainSumTimes } from \"../../utils/getSumTimesObj\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction DoughnutChart(_ref) {\n  let {\n    data\n  } = _ref;\n  const thisYear = new Date().getFullYear();\n  const thisMonth = new Date().getMonth() + 1;\n  const thisMonthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n  const entireTimes = getEntireTimes(thisMonthList);\n  const sumTimes = getMainSumTimes(entireTimes);\n  const chartData = {\n    labels: [\"자기계발\", \"개인시간\", \"일\", \"취침\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5],\n      backgroundColor: [\"rgba(251, 184, 1, 0.4)\", \"rgba(241, 66, 43, 0.4)\", \" rgba(74, 200, 190, 0.4)\", \"rgba(107, 29, 195, 0.4)\"],\n      borderColor: [\"#ffffff\"],\n      borderWidth: 5\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC774\\uBC88\\uB2EC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uCC28\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DoughnutChart;\nexport default DoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/components/DoughnutChart/DoughnutChart.tsx"],"names":["Container","Box","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","getEntireTimes","getMainSumTimes","register","DoughnutChart","data","thisYear","Date","getFullYear","thisMonth","getMonth","thisMonthList","filter","item","date","includes","entireTimes","sumTimes","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":";AACA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,SAA/B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;AAEAL,OAAO,CAACM,QAAR,CAAiBL,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;;AAEA,SAASI,aAAT,OAAsC;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACpC,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAjB;AACA,QAAMC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAA1C;AAEA,QAAMC,aAAa,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAmB;AACnD,WAAOA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAoB,GAAET,QAAS,IAAGG,SAAU,EAA5C,CAAP;AACD,GAFqB,CAAtB;AAIA,QAAMO,WAAW,GAAGf,cAAc,CAACU,aAAD,CAAlC;AACA,QAAMM,QAAQ,GAAGf,eAAe,CAACc,WAAD,CAAhC;AAEA,QAAME,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,GAAjB,EAAsB,IAAtB,CADQ;AAEhBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEhB,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAFR;AAGEiB,MAAAA,eAAe,EAAE,CACf,wBADe,EAEf,wBAFe,EAGf,0BAHe,EAIf,yBAJe,CAHnB;AASEC,MAAAA,WAAW,EAAE,CAAC,SAAD,CATf;AAUEC,MAAAA,WAAW,EAAE;AAVf,KADQ;AAFM,GAAlB;AAkBA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KArCQd,a;AAuCT,eAAeA,aAAf","sourcesContent":["import * as react from \"react\";\nimport { Container, Box } from \"./style\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { OneDate } from \"../../type\";\nimport { getEntireTimes } from \"../../utils/getEntireTimes\";\nimport { getMainSumTimes } from \"../../utils/getSumTimesObj\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction DoughnutChart({ data }: any) {\n  const thisYear = new Date().getFullYear();\n  const thisMonth = new Date().getMonth() + 1;\n\n  const thisMonthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n\n  const entireTimes = getEntireTimes(thisMonthList);\n  const sumTimes = getMainSumTimes(entireTimes);\n\n  const chartData = {\n    labels: [\"자기계발\", \"개인시간\", \"일\", \"취침\"],\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: [12, 19, 3, 5],\n        backgroundColor: [\n          \"rgba(251, 184, 1, 0.4)\",\n          \"rgba(241, 66, 43, 0.4)\",\n          \" rgba(74, 200, 190, 0.4)\",\n          \"rgba(107, 29, 195, 0.4)\",\n        ],\n        borderColor: [\"#ffffff\"],\n        borderWidth: 5,\n      },\n    ],\n  };\n\n  return (\n    <Container>\n      <h3>이번달 시간사용 차트</h3>\n      <Box>\n        <Doughnut data={chartData} />\n      </Box>\n    </Container>\n  );\n}\n\nexport default DoughnutChart;\n"]},"metadata":{},"sourceType":"module"}