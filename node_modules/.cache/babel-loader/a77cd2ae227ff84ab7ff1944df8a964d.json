{"ast":null,"code":"var _jsxFileName = \"/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport { getMainTimesPercent, getDetailTimesPercent } from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\nimport { Box, Time, Percent, TimeDiff, Container, BoxContainer, ChartBox, TopBox } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnalysisWeek() {\n  _s();\n\n  const [data, setData] = useState([]); // 데이터 불러오기\n\n  useEffect(() => {\n    getData(setData);\n  }, []);\n  const analysisType = [\"WEEK\", \"MONTH\", \"YEAR\"]; // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n\n  const test = getLastMondays(new Date(\"2020.01.01\").toDateString(), 0);\n  const testsun = getLastSunday(test);\n  console.log(new Date(test));\n  const standard = new Date(inputDate).toDateString(); // 오늘 날짜\n\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const thisWeek = new Date(getLastMondays(standard, 0));\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`\n  });\n  const [inputDate, setInputDate] = useState(`${selectedDate.current.year}.${selectedDate.current.month}.${new Date().getDate()}`);\n  console.log(thisWeek);\n  console.log(inputDate);\n  console.log(selectedDate);\n  console.log(standard);\n  console.log(thisMonth);\n  const thisMonthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n  const lastMonthList = data.filter(item => {\n    return item.date.includes(`${thisYear}.${thisMonth - 1}`);\n  });\n  const thisYearList = data.filter(item => {\n    return item.date.includes(`${thisYear}`);\n  });\n  const lastYearList = data.filter(item => {\n    return item.date.includes(`${thisYear - 1}`);\n  });\n  console.log(thisMonthList);\n  console.log(lastMonthList);\n  console.log(thisYearList);\n  console.log(lastYearList); // 데이터에서 이번주, 저번주 리스트 뽑아오기\n\n  const weekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter(item => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList); // 이번주, 저번주 전체 시간 가져오기\n\n  const entireTimes = weekList.map(item => item.entireTime);\n  const lastEntireTimes = lastWeekList.map(item => item.entireTime);\n  const monthEntireTimes = thisMonthList.map(item => item.entireTime);\n  const thisYearEntireTimes = thisYearList.map(item => item.entireTime); // 이번주 각 항목에 대한 시간 합계 구하기\n\n  const sumTimes = getMainSumTimes(entireTimes); // 저번주 각 항목에 대한 시간 합계 구하기\n\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes); // 저번주와의 퍼센트 비교값 구하기\n\n  const sumThisYearTimes = getMainSumTimes(thisYearEntireTimes);\n  console.log(sumThisYearTimes);\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(sumDetailTimes, lastSumDetailTimes);\n  const sleepingAverage = getSleepingAverage(sumDetailTimes, lastSumDetailTimes); // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = e => {\n    switch (e.target.name) {\n      case \"year\":\n        return selectedDate.current.year = e.target.value;\n\n      case \"month\":\n        return selectedDate.current.month = e.target.value;\n    }\n  };\n\n  const searchDateHandler = () => {\n    setInputDate(`${selectedDate.current.year}.${selectedDate.current.month}.1`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"주간분석\", \" \\uD398\\uC774\\uC9C0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"year\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2019\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          selected: true,\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"\\uB144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"month\",\n        id: \"cars\",\n        onChange: selectHandler,\n        children: month.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el,\n            selected: thisMonth === el,\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"\\uC6D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchDateHandler,\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${new Date(test).getFullYear()}.${new Date(test).getMonth() + 1}.${new Date(test).getDate()} (월) ~ ${new Date(testsun).getFullYear()}.${new Date(testsun).getMonth() + 1}.${new Date(testsun).getDate()} (일)`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BoxContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC774\\uBC88\\uC8FC \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC790\\uAE30\\uACC4\\uBC1C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumImprove)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.improvePercent,\n              children: [mainTimesPercent.improvePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC1C\\uC778\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumPrivate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.privatePercent,\n              children: [mainTimesPercent.privatePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uC77C: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumWorks)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.worksPercent,\n              children: [mainTimesPercent.worksPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uCDE8\\uCE68: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumTimes.sumSleep)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: mainTimesPercent.sleepPercent,\n              children: [mainTimesPercent.sleepPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uAE30\\uD0C0 \\uC2DC\\uAC04\\uC0AC\\uC6A9 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uACF5\\uBD80\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumStudy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.studyPercent,\n              children: [detailTimesPercent.studyPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uAC8C\\uC784\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumGame)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.gamePercent,\n              children: [detailTimesPercent.gamePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uB3C5\\uC11C \\uBC0F \\uC2E0\\uBB38:\", \" \", /*#__PURE__*/_jsxDEV(Time, {\n              children: convertMinToTime(sumDetailTimes.sumReading)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              data: detailTimesPercent.readingPercent,\n              children: [detailTimesPercent.readingPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uAE30\\uC0C1\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisWakeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.wakePercent,\n              children: [detailTimesPercent.wakePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD3C9\\uADE0 \\uCDE8\\uCE68\\uC2DC\\uAC04: \", /*#__PURE__*/_jsxDEV(Time, {\n              children: sleepingAverage.thisNight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TimeDiff, {\n              data: detailTimesPercent.nightPercent,\n              children: [detailTimesPercent.nightPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartBox, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          thisWeek: weekList,\n          lastWeek: lastWeekList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnalysisWeek, \"mm9k10zZeSmnXp/cLhU0ncmN0KQ=\");\n\n_c = AnalysisWeek;\nexport default AnalysisWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisWeek\");","map":{"version":3,"sources":["/Users/gimmingyu/Desktop/TimeTracker/Time-Tracker/src/pages/analysis-page/AnalysisWeek.tsx"],"names":["React","useEffect","useState","useRef","Header","Chart","getData","getLastMondays","getMainSumTimes","getDetailSumTimes","convertMinToTime","getLastSunday","getMainTimesPercent","getDetailTimesPercent","getSleepingAverage","Box","Time","Percent","TimeDiff","Container","BoxContainer","ChartBox","TopBox","AnalysisWeek","data","setData","analysisType","test","Date","toDateString","testsun","console","log","standard","inputDate","monday","sunday","lastMonday","lastSunday","thisMonth","getMonth","thisYear","getFullYear","thisWeek","selectedDate","year","month","setInputDate","current","getDate","thisMonthList","filter","item","date","includes","lastMonthList","thisYearList","lastYearList","weekList","getTime","lastWeekList","entireTimes","map","entireTime","lastEntireTimes","monthEntireTimes","thisYearEntireTimes","sumTimes","lastSumTimes","sumDetailTimes","lastSumDetailTimes","sumMonthTimes","sumThisYearTimes","mainTimesPercent","detailTimesPercent","sleepingAverage","selectHandler","e","target","name","value","searchDateHandler","el","sumImprove","improvePercent","sumPrivate","privatePercent","sumWorks","worksPercent","sumSleep","sleepPercent","sumStudy","studyPercent","sumGame","gamePercent","sumReading","readingPercent","thisWakeUp","wakePercent","thisNight","nightPercent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Chart from \"../../components/analysis-week/Chart\";\nimport { getData } from \"../../utils/getData\";\nimport { getLastMondays } from \"../../utils/getLastMondays\";\nimport { getMainSumTimes, getDetailSumTimes } from \"../../utils/getSumTimesObj\";\nimport { convertMinToTime } from \"../../utils/convertMinToTime\";\nimport { getLastSunday } from \"../../utils/getLastSunday\";\nimport {\n  getMainTimesPercent,\n  getDetailTimesPercent,\n} from \"../../utils/getTimesPercent\";\nimport { getSleepingAverage } from \"../../utils/getSleepAverage\";\n\nimport { OneDate } from \"../../type\";\nimport {\n  Box,\n  Time,\n  Percent,\n  TimeDiff,\n  Container,\n  BoxContainer,\n  ChartBox,\n  TopBox,\n} from \"./style\";\n\nfunction AnalysisWeek() {\n  const [data, setData] = useState([]);\n\n  // 데이터 불러오기\n  useEffect(() => {\n    getData(setData);\n  }, []);\n\n  const analysisType = [\"WEEK\", \"MONTH\", \"YEAR\"];\n\n  // 이번주 월요일 일요일, 저번주 월요일 일요일 구하기\n  const test = getLastMondays(new Date(\"2020.01.01\").toDateString(), 0);\n  const testsun = getLastSunday(test);\n  console.log(new Date(test));\n\n  const standard = new Date(inputDate).toDateString(); // 오늘 날짜\n\n  const monday = getLastMondays(standard, 1);\n  const sunday = getLastSunday(monday);\n  const lastMonday = getLastMondays(standard, 2);\n  const lastSunday = getLastSunday(lastMonday);\n\n  const thisMonth = new Date().getMonth() + 1;\n  const thisYear = new Date().getFullYear();\n  const thisWeek = new Date(getLastMondays(standard, 0));\n\n  const selectedDate = useRef({\n    year: `${thisYear}`,\n    month: `${thisMonth}`,\n  });\n  const [inputDate, setInputDate] = useState(\n    `${selectedDate.current.year}.${\n      selectedDate.current.month\n    }.${new Date().getDate()}`\n  );\n  console.log(thisWeek);\n  console.log(inputDate);\n  console.log(selectedDate);\n  console.log(standard);\n\n  console.log(thisMonth);\n  const thisMonthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth}`);\n  });\n\n  const lastMonthList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}.${thisMonth - 1}`);\n  });\n\n  const thisYearList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear}`);\n  });\n\n  const lastYearList = data.filter((item: OneDate) => {\n    return item.date.includes(`${thisYear - 1}`);\n  });\n\n  console.log(thisMonthList);\n  console.log(lastMonthList);\n  console.log(thisYearList);\n  console.log(lastYearList);\n\n  // 데이터에서 이번주, 저번주 리스트 뽑아오기\n  const weekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= monday && date <= sunday;\n  });\n  console.log(weekList);\n  const lastWeekList = data.filter((item: OneDate) => {\n    const date = new Date(item.date).getTime();\n    return date >= lastMonday && date <= lastSunday;\n  });\n  console.log(lastWeekList);\n  // 이번주, 저번주 전체 시간 가져오기\n  const entireTimes = weekList.map((item: OneDate) => item.entireTime);\n  const lastEntireTimes = lastWeekList.map((item: OneDate) => item.entireTime);\n  const monthEntireTimes = thisMonthList.map(\n    (item: OneDate) => item.entireTime\n  );\n  const thisYearEntireTimes = thisYearList.map(\n    (item: OneDate) => item.entireTime\n  );\n\n  // 이번주 각 항목에 대한 시간 합계 구하기\n  const sumTimes = getMainSumTimes(entireTimes);\n  // 저번주 각 항목에 대한 시간 합계 구하기\n  const lastSumTimes = getMainSumTimes(lastEntireTimes);\n\n  const sumDetailTimes = getDetailSumTimes(weekList);\n  const lastSumDetailTimes = getDetailSumTimes(lastWeekList);\n\n  const sumMonthTimes = getMainSumTimes(monthEntireTimes);\n  // 저번주와의 퍼센트 비교값 구하기\n  const sumThisYearTimes = getMainSumTimes(thisYearEntireTimes);\n  console.log(sumThisYearTimes);\n  const mainTimesPercent = getMainTimesPercent(sumTimes, lastSumTimes);\n  const detailTimesPercent = getDetailTimesPercent(\n    sumDetailTimes,\n    lastSumDetailTimes\n  );\n\n  const sleepingAverage = getSleepingAverage(\n    sumDetailTimes,\n    lastSumDetailTimes\n  );\n  // 기타 시간사용 통계 퍼센트\n\n  const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  const selectHandler = (e: any) => {\n    switch (e.target.name) {\n      case \"year\":\n        return (selectedDate.current.year = e.target.value);\n      case \"month\":\n        return (selectedDate.current.month = e.target.value);\n    }\n  };\n\n  const searchDateHandler = () => {\n    setInputDate(\n      `${selectedDate.current.year}.${selectedDate.current.month}.1`\n    );\n  };\n\n  return (\n    <>\n      <Header />\n      <TopBox>\n        <h2 className=\"title\">{\"주간분석\"} 페이지</h2>\n\n        <select name=\"year\" id=\"cars\" onChange={selectHandler}>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\" selected>\n            2022\n          </option>\n        </select>\n        <label htmlFor=\"year\">년</label>\n        <select name=\"month\" id=\"cars\" onChange={selectHandler}>\n          {month.map((el) => {\n            return (\n              <option value={el} selected={thisMonth === el}>\n                {el}\n              </option>\n            );\n          })}\n        </select>\n        <label htmlFor=\"month\">월</label>\n        <button onClick={searchDateHandler}>조회</button>\n\n        <p>{`${new Date(test).getFullYear()}.${\n          new Date(test).getMonth() + 1\n        }.${new Date(test).getDate()} (월) ~ ${new Date(\n          testsun\n        ).getFullYear()}.${new Date(testsun).getMonth() + 1}.${new Date(\n          testsun\n        ).getDate()} (일)`}</p>\n        <button>이전</button>\n        <button>다음</button>\n      </TopBox>\n\n      <Container>\n        <BoxContainer>\n          <Box>\n            <h2>이번주 시간사용 통계</h2>\n            <h3>\n              자기계발: <Time>{convertMinToTime(sumTimes.sumImprove)}</Time>\n              <Percent data={mainTimesPercent.improvePercent}>\n                {mainTimesPercent.improvePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              개인시간: <Time>{convertMinToTime(sumTimes.sumPrivate)}</Time>\n              <Percent data={mainTimesPercent.privatePercent}>\n                {mainTimesPercent.privatePercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              일: <Time>{convertMinToTime(sumTimes.sumWorks)}</Time>\n              <Percent data={mainTimesPercent.worksPercent}>\n                {mainTimesPercent.worksPercent}%\n              </Percent>\n            </h3>\n\n            <h3>\n              취침: <Time>{convertMinToTime(sumTimes.sumSleep)}</Time>\n              <Percent data={mainTimesPercent.sleepPercent}>\n                {mainTimesPercent.sleepPercent}%\n              </Percent>\n            </h3>\n          </Box>\n          <Box>\n            <h2>기타 시간사용 통계</h2>\n            <h3>\n              공부시간: <Time>{convertMinToTime(sumDetailTimes.sumStudy)}</Time>\n              <Percent data={detailTimesPercent.studyPercent}>\n                {detailTimesPercent.studyPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              게임시간: <Time>{convertMinToTime(sumDetailTimes.sumGame)}</Time>\n              <Percent data={detailTimesPercent.gamePercent}>\n                {detailTimesPercent.gamePercent}%\n              </Percent>\n            </h3>\n            <h3>\n              독서 및 신문:{\" \"}\n              <Time>{convertMinToTime(sumDetailTimes.sumReading)}</Time>\n              <Percent data={detailTimesPercent.readingPercent}>\n                {detailTimesPercent.readingPercent}%\n              </Percent>\n            </h3>\n            <h3>\n              평균 기상시간: <Time>{sleepingAverage.thisWakeUp}</Time>\n              <TimeDiff data={detailTimesPercent.wakePercent}>\n                {detailTimesPercent.wakePercent}%\n              </TimeDiff>\n            </h3>\n            <h3>\n              평균 취침시간: <Time>{sleepingAverage.thisNight}</Time>\n              <TimeDiff data={detailTimesPercent.nightPercent}>\n                {detailTimesPercent.nightPercent}%\n              </TimeDiff>\n            </h3>\n          </Box>\n        </BoxContainer>\n        <ChartBox>\n          <Chart thisWeek={weekList} lastWeek={lastWeekList}></Chart>\n        </ChartBox>\n      </Container>\n    </>\n  );\n}\n\nexport default AnalysisWeek;\n"]},"metadata":{},"sourceType":"module"}